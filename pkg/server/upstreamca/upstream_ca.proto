/**Responsible for processing Certificate Signing Requests for intermediate signing certificates
(or from Node Agents if the user does not want the Control Plane to retain signing material).
This plugin will manage/own the Trust Bundles for the Control Plane, and act as the interface for upstream CAs.*/
syntax = "proto3";
package upstreamca;

import public "github.com/spiffe/sri/pkg/common/plugin/plugin.proto";

message SubmitCSRRequest {
    bytes csr = 1; ///Certificate signing request.
}

message SubmitCSRResponse {
    bytes cert = 1; ///Signed certificate
    bytes upstreamTrustBundle = 2; ///Upstream trust bundle.
}

service UpstreamCA {
    /**Responsible for configuration of the plugin.*/
    rpc Configure(sriplugin.ConfigureRequest) returns (sriplugin.ConfigureResponse);
    /**Returns the  version and related metadata of the installed plugin.*/
    rpc GetPluginInfo(sriplugin.GetPluginInfoRequest) returns (sriplugin.GetPluginInfoResponse);
    /**Will take in a CSR and submit it to the upstream CA for signing
    (“upstream” CA can be local self-signed root in simple case).*/
    rpc SubmitCSR(SubmitCSRRequest) returns (SubmitCSRResponse);
}
