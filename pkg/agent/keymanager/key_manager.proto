/**A plugin which is responsible for generating and storing a key pair, optionally with a hardware-backed secret store.
It is used for generating the key pair for the Base SPIFFE Id of the Node Agent, and persisting that identity across restarts/reboots.*/

syntax = "proto3";
package keymanager;

import public "github.com/spiffe/sri/pkg/common/plugin/plugin.proto";

/** Represents an empty request.*/
message GenerateKeyPairRequest {}

/** Represents a public and private key pair.*/
message GenerateKeyPairResponse {
    bytes publicKey = 1; //Public key.
    bytes privateKey = 2; //Private key.
}

/** Represents an empty request.*/
message FetchPrivateKeyRequest {}

/** Represents a private key.*/
message FetchPrivateKeyResponse {
    bytes privateKey = 1; //Private key.
}


service KeyManager {
    /// Creates a key pair that is bound to hardware.
    rpc GenerateKeyPair(GenerateKeyPairRequest) returns (GenerateKeyPairResponse);
    /// Returns previously generated private key. For use after node restarts.
    rpc FetchPrivateKey(FetchPrivateKeyRequest) returns (FetchPrivateKeyResponse);
    /// Applies the plugin configuration and returns configuration errors.
    rpc Configure(sriplugin.ConfigureRequest) returns (sriplugin.ConfigureResponse);
    /// Returns the version and related metadata of the plugin.
    rpc GetPluginInfo(sriplugin.GetPluginInfoRequest) returns (sriplugin.GetPluginInfoResponse);
}
