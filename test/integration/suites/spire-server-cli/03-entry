#!/bin/bash

# Create bundles of federated tds to be used then
docker-compose exec -T spire-server \
    ash -c "
cat /opt/spire/conf/fixture/ca.pem | 
    /opt/spire/bin/spire-server bundle set -id spiffe://federated1.test" || fail-now "failed to create federated bundle 1"

docker-compose exec -T spire-server \
    ash -c "
cat /opt/spire/conf/fixture/ca.pem | 
    /opt/spire/bin/spire-server bundle set -id spiffe://federated2.test" || fail-now "failed to create federated bundle 2"

# Verify entry create
docker-compose exec -T spire-server \
	/opt/spire/bin/spire-server entry create \
        -selector s1:v1 \
        -parentID spiffe://domain.test/parent \
        -spiffeID spiffe://domain.test/child1 \
        -federatesWith spiffe://federated1.test || fail-now "failed to create entry 1"

docker-compose exec -T spire-server \
	/opt/spire/bin/spire-server entry create \
        -selector notUpdated:notUpdated \
        -parentID spiffe://domain.test/parentNotUpdated \
        -spiffeID spiffe://domain.test/child2NotUpdated || fail-now "failed to create entry 2"

docker-compose exec -T spire-server \
    /opt/spire/bin/spire-server entry create \
        -selector otherS:otherV \
        -parentID spiffe://domain.test/otherParent \
        -spiffeID spiffe://domain.test/otherChild || fail-now "failed to create entry 3"

# Verify entry show and set variables entryID1 and entryID2
# Entry 1
docker-compose exec -T spire-server \
	/opt/spire/bin/spire-server entry show \
        -spiffeID spiffe://domain.test/child1 | grep "Found 1 entry" || fail-now "failed to show entry 1"
docker-compose exec -T spire-server \
	/opt/spire/bin/spire-server entry show \
        -spiffeID spiffe://domain.test/child1 | grep "SPIFFE ID" | \
        grep spiffe://domain.test/child1 || fail-now "failed to show entry 1, unexpected SPIFFE ID"
entryID1="$(docker-compose exec -T spire-server \
	/opt/spire/bin/spire-server entry show \
        -spiffeID spiffe://domain.test/child1 | grep "Entry ID")" || fail-now "failed to show entry 1, no Entry ID"
entryID1="${entryID1#*: }"

# Entry 2
docker-compose exec -T spire-server \
	/opt/spire/bin/spire-server entry show \
        -spiffeID spiffe://domain.test/child2NotUpdated | grep "Found 1 entry" || fail-now "failed to show entry 2"
docker-compose exec -T spire-server \
	/opt/spire/bin/spire-server entry show \
        -spiffeID spiffe://domain.test/child2NotUpdated | grep "SPIFFE ID" | \
        grep spiffe://domain.test/child2NotUpdated || fail-now "failed to show entry 2, unexpected SPIFFE ID"
entryID2="$(docker-compose exec -T spire-server \
	/opt/spire/bin/spire-server entry show \
        -spiffeID spiffe://domain.test/child2NotUpdated | grep "Entry ID")" || fail-now "failed to show entry 2, no Entry ID"
entryID2="${entryID2#*: }"
