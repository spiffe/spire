#!/bin/bash

# Create a temporary path that will be added to the PATH to avoid picking up
# binaries from the environment that aren't a version match.
mkdir -p ./bin

KIND_PATH=./bin/kind
KUBECTL_PATH=./bin/kubectl

# Download kind at the expected version at the given path.
download-kind "${KIND_PATH}"

# Download kubectl at the expected version.
download-kubectl "${KUBECTL_PATH}"

# We must supply an absolute path to the configuration directory. Replace the
# CONFDIR variable in the kind configuration with the conf directory of the 
# running test.
sed -i.bak "s#CONFDIR#${PWD}/conf#g" conf/kind-config.yaml
rm conf/kind-config.yaml.bak

#create folder which will contain the registry certificate information
mkdir ${PWD}/conf/docker-registry
mkdir ${PWD}/conf/docker-registry/certs

#create local registry self signed certificate files
openssl req -new -newkey rsa:4096 -nodes -sha256 -keyout ${PWD}/conf/docker-registry/certs/domain.key -addext "subjectAltName = DNS:docker-registry-local" -x509 -days 365 -subj "/C=BR/ST=PE/L=Recife" -out ${PWD}/conf/docker-registry/certs/domain.crt

# Start the kind cluster.
start-kind-cluster "${KIND_PATH}" k8stest ./conf/kind-config.yaml

#start local registry service connected to kind network
docker-up registry

#copy signed images from public to local registry
docker run --network="kind" -v "${PWD}"/conf/docker-registry/certs/domain.crt:/etc/ssl/certs/domain.crt gcr.io/projectsigstore/cosign:v1.2.1 copy hpespirex/spire-workload:signed docker-registry-local:5000/workload:signed
docker run --network="kind" -v "${PWD}"/conf/docker-registry/certs/domain.crt:/etc/ssl/certs/domain.crt gcr.io/projectsigstore/cosign:v1.2.1 copy hpespirex/spire-workload:signed-wrong-subject docker-registry-local:5000/workload:signed-wrong-subject
#copying unsigned image with crane tool from public to local registry
docker run --network="kind" -v "${PWD}"/conf/docker-registry/certs/domain.crt:/etc/ssl/certs/domain.crt gcr.io/go-containerregistry/crane:v0.7.0 copy hpespirex/spire-workload:unsigned docker-registry-local:5000/workload:unsigned

#copying unsigned images for skiplist with crane tool from public to local registry
docker run --network="kind" -v "${PWD}"/conf/docker-registry/certs/domain.crt:/etc/ssl/certs/domain.crt gcr.io/go-containerregistry/crane:v0.7.0 copy hpespirex/spire-workload:alternate-unsigned docker-registry-local:5000/workload:unsigned-skiplist1
docker run --network="kind" -v "${PWD}"/conf/docker-registry/certs/domain.crt:/etc/ssl/certs/domain.crt gcr.io/go-containerregistry/crane:v0.7.0 copy hpespirex/spire-workload:alternate-unsigned docker-registry-local:5000/workload:unsigned-skiplist2


#copy certificate to ssl certicates dest folder on kind cluster
docker exec k8stest-control-plane cp /mnt/reg-certificate/docker-registry/certs/domain.crt /etc/ssl/certs/

#append registry certificate to registry secret configmap
sed 's/^/    /' ${PWD}/conf/docker-registry/certs/domain.crt >> ${PWD}/conf/registry-secret.yaml

#copy configmap to kustomization directory of spire-agent
cp ${PWD}/conf/registry-secret.yaml ${PWD}/conf/agent

# Load the given images in the cluster.
container_images=("spire-server:latest-local" "spire-agent:latest-local" "k8s-workload-registrar:latest-local")
load-images "${KIND_PATH}" k8stest "${container_images[@]}"

# Set the kubectl context.
set-kubectl-context "${KUBECTL_PATH}" kind-k8stest
