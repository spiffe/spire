// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/server/datastore/datastore.proto

package datastore // import "github.com/spiffe/spire/proto/server/datastore"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import common "github.com/spiffe/spire/proto/common"
import plugin "github.com/spiffe/spire/proto/common/plugin"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// DoubleValue from public import google/protobuf/wrappers.proto
type DoubleValue = wrappers.DoubleValue

// FloatValue from public import google/protobuf/wrappers.proto
type FloatValue = wrappers.FloatValue

// Int64Value from public import google/protobuf/wrappers.proto
type Int64Value = wrappers.Int64Value

// UInt64Value from public import google/protobuf/wrappers.proto
type UInt64Value = wrappers.UInt64Value

// Int32Value from public import google/protobuf/wrappers.proto
type Int32Value = wrappers.Int32Value

// UInt32Value from public import google/protobuf/wrappers.proto
type UInt32Value = wrappers.UInt32Value

// BoolValue from public import google/protobuf/wrappers.proto
type BoolValue = wrappers.BoolValue

// StringValue from public import google/protobuf/wrappers.proto
type StringValue = wrappers.StringValue

// BytesValue from public import google/protobuf/wrappers.proto
type BytesValue = wrappers.BytesValue

// ConfigureRequest from public import proto/common/plugin/plugin.proto
type ConfigureRequest = plugin.ConfigureRequest

// GlobalConfig from public import proto/common/plugin/plugin.proto
type ConfigureRequest_GlobalConfig = plugin.ConfigureRequest_GlobalConfig

// ConfigureResponse from public import proto/common/plugin/plugin.proto
type ConfigureResponse = plugin.ConfigureResponse

// GetPluginInfoRequest from public import proto/common/plugin/plugin.proto
type GetPluginInfoRequest = plugin.GetPluginInfoRequest

// GetPluginInfoResponse from public import proto/common/plugin/plugin.proto
type GetPluginInfoResponse = plugin.GetPluginInfoResponse

// Empty from public import proto/common/common.proto
type Empty = common.Empty

// AttestationData from public import proto/common/common.proto
type AttestationData = common.AttestationData

// Selector from public import proto/common/common.proto
type Selector = common.Selector

// Selectors from public import proto/common/common.proto
type Selectors = common.Selectors

// RegistrationEntry from public import proto/common/common.proto
type RegistrationEntry = common.RegistrationEntry

// RegistrationEntries from public import proto/common/common.proto
type RegistrationEntries = common.RegistrationEntries

// Certificate from public import proto/common/common.proto
type Certificate = common.Certificate

// PublicKey from public import proto/common/common.proto
type PublicKey = common.PublicKey

// Bundle from public import proto/common/common.proto
type Bundle = common.Bundle

// Mode controls the delete behavior if there are other records
// associated with the bundle (e.g. registration entries).
type DeleteBundleRequest_Mode int32

const (
	// RESTRICT prevents the bundle from being deleted in the presence of associated entries
	DeleteBundleRequest_RESTRICT DeleteBundleRequest_Mode = 0
	// DELETE deletes the bundle and associated entries
	DeleteBundleRequest_DELETE DeleteBundleRequest_Mode = 1
	// DISSOCIATE deletes the bundle and dissociates associated entries
	DeleteBundleRequest_DISSOCIATE DeleteBundleRequest_Mode = 2
)

var DeleteBundleRequest_Mode_name = map[int32]string{
	0: "RESTRICT",
	1: "DELETE",
	2: "DISSOCIATE",
}
var DeleteBundleRequest_Mode_value = map[string]int32{
	"RESTRICT":   0,
	"DELETE":     1,
	"DISSOCIATE": 2,
}

func (x DeleteBundleRequest_Mode) String() string {
	return proto.EnumName(DeleteBundleRequest_Mode_name, int32(x))
}
func (DeleteBundleRequest_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{10, 0}
}

type BySelectors_MatchBehavior int32

const (
	BySelectors_MATCH_EXACT  BySelectors_MatchBehavior = 0
	BySelectors_MATCH_SUBSET BySelectors_MatchBehavior = 1
)

var BySelectors_MatchBehavior_name = map[int32]string{
	0: "MATCH_EXACT",
	1: "MATCH_SUBSET",
}
var BySelectors_MatchBehavior_value = map[string]int32{
	"MATCH_EXACT":  0,
	"MATCH_SUBSET": 1,
}

func (x BySelectors_MatchBehavior) String() string {
	return proto.EnumName(BySelectors_MatchBehavior_name, int32(x))
}
func (BySelectors_MatchBehavior) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{32, 0}
}

type CreateBundleRequest struct {
	Bundle               *common.Bundle `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateBundleRequest) Reset()         { *m = CreateBundleRequest{} }
func (m *CreateBundleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBundleRequest) ProtoMessage()    {}
func (*CreateBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{0}
}
func (m *CreateBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBundleRequest.Unmarshal(m, b)
}
func (m *CreateBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBundleRequest.Marshal(b, m, deterministic)
}
func (dst *CreateBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBundleRequest.Merge(dst, src)
}
func (m *CreateBundleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBundleRequest.Size(m)
}
func (m *CreateBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBundleRequest proto.InternalMessageInfo

func (m *CreateBundleRequest) GetBundle() *common.Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type CreateBundleResponse struct {
	Bundle               *common.Bundle `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateBundleResponse) Reset()         { *m = CreateBundleResponse{} }
func (m *CreateBundleResponse) String() string { return proto.CompactTextString(m) }
func (*CreateBundleResponse) ProtoMessage()    {}
func (*CreateBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{1}
}
func (m *CreateBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBundleResponse.Unmarshal(m, b)
}
func (m *CreateBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBundleResponse.Marshal(b, m, deterministic)
}
func (dst *CreateBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBundleResponse.Merge(dst, src)
}
func (m *CreateBundleResponse) XXX_Size() int {
	return xxx_messageInfo_CreateBundleResponse.Size(m)
}
func (m *CreateBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBundleResponse proto.InternalMessageInfo

func (m *CreateBundleResponse) GetBundle() *common.Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type FetchBundleRequest struct {
	TrustDomainId        string   `protobuf:"bytes,1,opt,name=trust_domain_id,json=trustDomainId,proto3" json:"trust_domain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchBundleRequest) Reset()         { *m = FetchBundleRequest{} }
func (m *FetchBundleRequest) String() string { return proto.CompactTextString(m) }
func (*FetchBundleRequest) ProtoMessage()    {}
func (*FetchBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{2}
}
func (m *FetchBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchBundleRequest.Unmarshal(m, b)
}
func (m *FetchBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchBundleRequest.Marshal(b, m, deterministic)
}
func (dst *FetchBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchBundleRequest.Merge(dst, src)
}
func (m *FetchBundleRequest) XXX_Size() int {
	return xxx_messageInfo_FetchBundleRequest.Size(m)
}
func (m *FetchBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchBundleRequest proto.InternalMessageInfo

func (m *FetchBundleRequest) GetTrustDomainId() string {
	if m != nil {
		return m.TrustDomainId
	}
	return ""
}

type FetchBundleResponse struct {
	Bundle               *common.Bundle `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FetchBundleResponse) Reset()         { *m = FetchBundleResponse{} }
func (m *FetchBundleResponse) String() string { return proto.CompactTextString(m) }
func (*FetchBundleResponse) ProtoMessage()    {}
func (*FetchBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{3}
}
func (m *FetchBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchBundleResponse.Unmarshal(m, b)
}
func (m *FetchBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchBundleResponse.Marshal(b, m, deterministic)
}
func (dst *FetchBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchBundleResponse.Merge(dst, src)
}
func (m *FetchBundleResponse) XXX_Size() int {
	return xxx_messageInfo_FetchBundleResponse.Size(m)
}
func (m *FetchBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchBundleResponse proto.InternalMessageInfo

func (m *FetchBundleResponse) GetBundle() *common.Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type ListBundlesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBundlesRequest) Reset()         { *m = ListBundlesRequest{} }
func (m *ListBundlesRequest) String() string { return proto.CompactTextString(m) }
func (*ListBundlesRequest) ProtoMessage()    {}
func (*ListBundlesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{4}
}
func (m *ListBundlesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBundlesRequest.Unmarshal(m, b)
}
func (m *ListBundlesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBundlesRequest.Marshal(b, m, deterministic)
}
func (dst *ListBundlesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBundlesRequest.Merge(dst, src)
}
func (m *ListBundlesRequest) XXX_Size() int {
	return xxx_messageInfo_ListBundlesRequest.Size(m)
}
func (m *ListBundlesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBundlesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBundlesRequest proto.InternalMessageInfo

type ListBundlesResponse struct {
	Bundles              []*common.Bundle `protobuf:"bytes,1,rep,name=bundles,proto3" json:"bundles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListBundlesResponse) Reset()         { *m = ListBundlesResponse{} }
func (m *ListBundlesResponse) String() string { return proto.CompactTextString(m) }
func (*ListBundlesResponse) ProtoMessage()    {}
func (*ListBundlesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{5}
}
func (m *ListBundlesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBundlesResponse.Unmarshal(m, b)
}
func (m *ListBundlesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBundlesResponse.Marshal(b, m, deterministic)
}
func (dst *ListBundlesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBundlesResponse.Merge(dst, src)
}
func (m *ListBundlesResponse) XXX_Size() int {
	return xxx_messageInfo_ListBundlesResponse.Size(m)
}
func (m *ListBundlesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBundlesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListBundlesResponse proto.InternalMessageInfo

func (m *ListBundlesResponse) GetBundles() []*common.Bundle {
	if m != nil {
		return m.Bundles
	}
	return nil
}

type UpdateBundleRequest struct {
	Bundle               *common.Bundle `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateBundleRequest) Reset()         { *m = UpdateBundleRequest{} }
func (m *UpdateBundleRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBundleRequest) ProtoMessage()    {}
func (*UpdateBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{6}
}
func (m *UpdateBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBundleRequest.Unmarshal(m, b)
}
func (m *UpdateBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBundleRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBundleRequest.Merge(dst, src)
}
func (m *UpdateBundleRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBundleRequest.Size(m)
}
func (m *UpdateBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBundleRequest proto.InternalMessageInfo

func (m *UpdateBundleRequest) GetBundle() *common.Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type UpdateBundleResponse struct {
	Bundle               *common.Bundle `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateBundleResponse) Reset()         { *m = UpdateBundleResponse{} }
func (m *UpdateBundleResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateBundleResponse) ProtoMessage()    {}
func (*UpdateBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{7}
}
func (m *UpdateBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBundleResponse.Unmarshal(m, b)
}
func (m *UpdateBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBundleResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBundleResponse.Merge(dst, src)
}
func (m *UpdateBundleResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateBundleResponse.Size(m)
}
func (m *UpdateBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBundleResponse proto.InternalMessageInfo

func (m *UpdateBundleResponse) GetBundle() *common.Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type AppendBundleRequest struct {
	Bundle               *common.Bundle `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AppendBundleRequest) Reset()         { *m = AppendBundleRequest{} }
func (m *AppendBundleRequest) String() string { return proto.CompactTextString(m) }
func (*AppendBundleRequest) ProtoMessage()    {}
func (*AppendBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{8}
}
func (m *AppendBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendBundleRequest.Unmarshal(m, b)
}
func (m *AppendBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendBundleRequest.Marshal(b, m, deterministic)
}
func (dst *AppendBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendBundleRequest.Merge(dst, src)
}
func (m *AppendBundleRequest) XXX_Size() int {
	return xxx_messageInfo_AppendBundleRequest.Size(m)
}
func (m *AppendBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppendBundleRequest proto.InternalMessageInfo

func (m *AppendBundleRequest) GetBundle() *common.Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type AppendBundleResponse struct {
	Bundle               *common.Bundle `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AppendBundleResponse) Reset()         { *m = AppendBundleResponse{} }
func (m *AppendBundleResponse) String() string { return proto.CompactTextString(m) }
func (*AppendBundleResponse) ProtoMessage()    {}
func (*AppendBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{9}
}
func (m *AppendBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendBundleResponse.Unmarshal(m, b)
}
func (m *AppendBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendBundleResponse.Marshal(b, m, deterministic)
}
func (dst *AppendBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendBundleResponse.Merge(dst, src)
}
func (m *AppendBundleResponse) XXX_Size() int {
	return xxx_messageInfo_AppendBundleResponse.Size(m)
}
func (m *AppendBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppendBundleResponse proto.InternalMessageInfo

func (m *AppendBundleResponse) GetBundle() *common.Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type DeleteBundleRequest struct {
	TrustDomainId        string                   `protobuf:"bytes,1,opt,name=trust_domain_id,json=trustDomainId,proto3" json:"trust_domain_id,omitempty"`
	Mode                 DeleteBundleRequest_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=spire.server.datastore.DeleteBundleRequest_Mode" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DeleteBundleRequest) Reset()         { *m = DeleteBundleRequest{} }
func (m *DeleteBundleRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBundleRequest) ProtoMessage()    {}
func (*DeleteBundleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{10}
}
func (m *DeleteBundleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBundleRequest.Unmarshal(m, b)
}
func (m *DeleteBundleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBundleRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteBundleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBundleRequest.Merge(dst, src)
}
func (m *DeleteBundleRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBundleRequest.Size(m)
}
func (m *DeleteBundleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBundleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBundleRequest proto.InternalMessageInfo

func (m *DeleteBundleRequest) GetTrustDomainId() string {
	if m != nil {
		return m.TrustDomainId
	}
	return ""
}

func (m *DeleteBundleRequest) GetMode() DeleteBundleRequest_Mode {
	if m != nil {
		return m.Mode
	}
	return DeleteBundleRequest_RESTRICT
}

type DeleteBundleResponse struct {
	Bundle               *common.Bundle `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeleteBundleResponse) Reset()         { *m = DeleteBundleResponse{} }
func (m *DeleteBundleResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteBundleResponse) ProtoMessage()    {}
func (*DeleteBundleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{11}
}
func (m *DeleteBundleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBundleResponse.Unmarshal(m, b)
}
func (m *DeleteBundleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBundleResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteBundleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBundleResponse.Merge(dst, src)
}
func (m *DeleteBundleResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteBundleResponse.Size(m)
}
func (m *DeleteBundleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBundleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBundleResponse proto.InternalMessageInfo

func (m *DeleteBundleResponse) GetBundle() *common.Bundle {
	if m != nil {
		return m.Bundle
	}
	return nil
}

type NodeSelectors struct {
	// Node SPIFFE ID
	SpiffeId string `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId,proto3" json:"spiffe_id,omitempty"`
	// Node selectors
	Selectors            []*common.Selector `protobuf:"bytes,2,rep,name=selectors,proto3" json:"selectors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *NodeSelectors) Reset()         { *m = NodeSelectors{} }
func (m *NodeSelectors) String() string { return proto.CompactTextString(m) }
func (*NodeSelectors) ProtoMessage()    {}
func (*NodeSelectors) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{12}
}
func (m *NodeSelectors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeSelectors.Unmarshal(m, b)
}
func (m *NodeSelectors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeSelectors.Marshal(b, m, deterministic)
}
func (dst *NodeSelectors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeSelectors.Merge(dst, src)
}
func (m *NodeSelectors) XXX_Size() int {
	return xxx_messageInfo_NodeSelectors.Size(m)
}
func (m *NodeSelectors) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeSelectors.DiscardUnknown(m)
}

var xxx_messageInfo_NodeSelectors proto.InternalMessageInfo

func (m *NodeSelectors) GetSpiffeId() string {
	if m != nil {
		return m.SpiffeId
	}
	return ""
}

func (m *NodeSelectors) GetSelectors() []*common.Selector {
	if m != nil {
		return m.Selectors
	}
	return nil
}

type SetNodeSelectorsRequest struct {
	Selectors            *NodeSelectors `protobuf:"bytes,1,opt,name=selectors,proto3" json:"selectors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SetNodeSelectorsRequest) Reset()         { *m = SetNodeSelectorsRequest{} }
func (m *SetNodeSelectorsRequest) String() string { return proto.CompactTextString(m) }
func (*SetNodeSelectorsRequest) ProtoMessage()    {}
func (*SetNodeSelectorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{13}
}
func (m *SetNodeSelectorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNodeSelectorsRequest.Unmarshal(m, b)
}
func (m *SetNodeSelectorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNodeSelectorsRequest.Marshal(b, m, deterministic)
}
func (dst *SetNodeSelectorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNodeSelectorsRequest.Merge(dst, src)
}
func (m *SetNodeSelectorsRequest) XXX_Size() int {
	return xxx_messageInfo_SetNodeSelectorsRequest.Size(m)
}
func (m *SetNodeSelectorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNodeSelectorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetNodeSelectorsRequest proto.InternalMessageInfo

func (m *SetNodeSelectorsRequest) GetSelectors() *NodeSelectors {
	if m != nil {
		return m.Selectors
	}
	return nil
}

type SetNodeSelectorsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetNodeSelectorsResponse) Reset()         { *m = SetNodeSelectorsResponse{} }
func (m *SetNodeSelectorsResponse) String() string { return proto.CompactTextString(m) }
func (*SetNodeSelectorsResponse) ProtoMessage()    {}
func (*SetNodeSelectorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{14}
}
func (m *SetNodeSelectorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNodeSelectorsResponse.Unmarshal(m, b)
}
func (m *SetNodeSelectorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNodeSelectorsResponse.Marshal(b, m, deterministic)
}
func (dst *SetNodeSelectorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNodeSelectorsResponse.Merge(dst, src)
}
func (m *SetNodeSelectorsResponse) XXX_Size() int {
	return xxx_messageInfo_SetNodeSelectorsResponse.Size(m)
}
func (m *SetNodeSelectorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNodeSelectorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetNodeSelectorsResponse proto.InternalMessageInfo

type GetNodeSelectorsRequest struct {
	SpiffeId             string   `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId,proto3" json:"spiffe_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeSelectorsRequest) Reset()         { *m = GetNodeSelectorsRequest{} }
func (m *GetNodeSelectorsRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeSelectorsRequest) ProtoMessage()    {}
func (*GetNodeSelectorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{15}
}
func (m *GetNodeSelectorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeSelectorsRequest.Unmarshal(m, b)
}
func (m *GetNodeSelectorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeSelectorsRequest.Marshal(b, m, deterministic)
}
func (dst *GetNodeSelectorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeSelectorsRequest.Merge(dst, src)
}
func (m *GetNodeSelectorsRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeSelectorsRequest.Size(m)
}
func (m *GetNodeSelectorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeSelectorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeSelectorsRequest proto.InternalMessageInfo

func (m *GetNodeSelectorsRequest) GetSpiffeId() string {
	if m != nil {
		return m.SpiffeId
	}
	return ""
}

type GetNodeSelectorsResponse struct {
	Selectors            *NodeSelectors `protobuf:"bytes,1,opt,name=selectors,proto3" json:"selectors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetNodeSelectorsResponse) Reset()         { *m = GetNodeSelectorsResponse{} }
func (m *GetNodeSelectorsResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeSelectorsResponse) ProtoMessage()    {}
func (*GetNodeSelectorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{16}
}
func (m *GetNodeSelectorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeSelectorsResponse.Unmarshal(m, b)
}
func (m *GetNodeSelectorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeSelectorsResponse.Marshal(b, m, deterministic)
}
func (dst *GetNodeSelectorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeSelectorsResponse.Merge(dst, src)
}
func (m *GetNodeSelectorsResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeSelectorsResponse.Size(m)
}
func (m *GetNodeSelectorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeSelectorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeSelectorsResponse proto.InternalMessageInfo

func (m *GetNodeSelectorsResponse) GetSelectors() *NodeSelectors {
	if m != nil {
		return m.Selectors
	}
	return nil
}

type AttestedNode struct {
	// Node SPIFFE ID
	SpiffeId string `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId,proto3" json:"spiffe_id,omitempty"`
	// Attestation data type
	AttestationDataType string `protobuf:"bytes,2,opt,name=attestation_data_type,json=attestationDataType,proto3" json:"attestation_data_type,omitempty"`
	// Node certificate serial number
	CertSerialNumber string `protobuf:"bytes,3,opt,name=cert_serial_number,json=certSerialNumber,proto3" json:"cert_serial_number,omitempty"`
	// Node certificate not_after (seconds since unix epoch)
	CertNotAfter         int64    `protobuf:"varint,4,opt,name=cert_not_after,json=certNotAfter,proto3" json:"cert_not_after,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttestedNode) Reset()         { *m = AttestedNode{} }
func (m *AttestedNode) String() string { return proto.CompactTextString(m) }
func (*AttestedNode) ProtoMessage()    {}
func (*AttestedNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{17}
}
func (m *AttestedNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestedNode.Unmarshal(m, b)
}
func (m *AttestedNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestedNode.Marshal(b, m, deterministic)
}
func (dst *AttestedNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestedNode.Merge(dst, src)
}
func (m *AttestedNode) XXX_Size() int {
	return xxx_messageInfo_AttestedNode.Size(m)
}
func (m *AttestedNode) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestedNode.DiscardUnknown(m)
}

var xxx_messageInfo_AttestedNode proto.InternalMessageInfo

func (m *AttestedNode) GetSpiffeId() string {
	if m != nil {
		return m.SpiffeId
	}
	return ""
}

func (m *AttestedNode) GetAttestationDataType() string {
	if m != nil {
		return m.AttestationDataType
	}
	return ""
}

func (m *AttestedNode) GetCertSerialNumber() string {
	if m != nil {
		return m.CertSerialNumber
	}
	return ""
}

func (m *AttestedNode) GetCertNotAfter() int64 {
	if m != nil {
		return m.CertNotAfter
	}
	return 0
}

type CreateAttestedNodeRequest struct {
	Node                 *AttestedNode `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateAttestedNodeRequest) Reset()         { *m = CreateAttestedNodeRequest{} }
func (m *CreateAttestedNodeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAttestedNodeRequest) ProtoMessage()    {}
func (*CreateAttestedNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{18}
}
func (m *CreateAttestedNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAttestedNodeRequest.Unmarshal(m, b)
}
func (m *CreateAttestedNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAttestedNodeRequest.Marshal(b, m, deterministic)
}
func (dst *CreateAttestedNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAttestedNodeRequest.Merge(dst, src)
}
func (m *CreateAttestedNodeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAttestedNodeRequest.Size(m)
}
func (m *CreateAttestedNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAttestedNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAttestedNodeRequest proto.InternalMessageInfo

func (m *CreateAttestedNodeRequest) GetNode() *AttestedNode {
	if m != nil {
		return m.Node
	}
	return nil
}

type CreateAttestedNodeResponse struct {
	Node                 *AttestedNode `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateAttestedNodeResponse) Reset()         { *m = CreateAttestedNodeResponse{} }
func (m *CreateAttestedNodeResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAttestedNodeResponse) ProtoMessage()    {}
func (*CreateAttestedNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{19}
}
func (m *CreateAttestedNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAttestedNodeResponse.Unmarshal(m, b)
}
func (m *CreateAttestedNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAttestedNodeResponse.Marshal(b, m, deterministic)
}
func (dst *CreateAttestedNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAttestedNodeResponse.Merge(dst, src)
}
func (m *CreateAttestedNodeResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAttestedNodeResponse.Size(m)
}
func (m *CreateAttestedNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAttestedNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAttestedNodeResponse proto.InternalMessageInfo

func (m *CreateAttestedNodeResponse) GetNode() *AttestedNode {
	if m != nil {
		return m.Node
	}
	return nil
}

type FetchAttestedNodeRequest struct {
	SpiffeId             string   `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId,proto3" json:"spiffe_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchAttestedNodeRequest) Reset()         { *m = FetchAttestedNodeRequest{} }
func (m *FetchAttestedNodeRequest) String() string { return proto.CompactTextString(m) }
func (*FetchAttestedNodeRequest) ProtoMessage()    {}
func (*FetchAttestedNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{20}
}
func (m *FetchAttestedNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchAttestedNodeRequest.Unmarshal(m, b)
}
func (m *FetchAttestedNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchAttestedNodeRequest.Marshal(b, m, deterministic)
}
func (dst *FetchAttestedNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchAttestedNodeRequest.Merge(dst, src)
}
func (m *FetchAttestedNodeRequest) XXX_Size() int {
	return xxx_messageInfo_FetchAttestedNodeRequest.Size(m)
}
func (m *FetchAttestedNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchAttestedNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchAttestedNodeRequest proto.InternalMessageInfo

func (m *FetchAttestedNodeRequest) GetSpiffeId() string {
	if m != nil {
		return m.SpiffeId
	}
	return ""
}

type FetchAttestedNodeResponse struct {
	Node                 *AttestedNode `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FetchAttestedNodeResponse) Reset()         { *m = FetchAttestedNodeResponse{} }
func (m *FetchAttestedNodeResponse) String() string { return proto.CompactTextString(m) }
func (*FetchAttestedNodeResponse) ProtoMessage()    {}
func (*FetchAttestedNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{21}
}
func (m *FetchAttestedNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchAttestedNodeResponse.Unmarshal(m, b)
}
func (m *FetchAttestedNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchAttestedNodeResponse.Marshal(b, m, deterministic)
}
func (dst *FetchAttestedNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchAttestedNodeResponse.Merge(dst, src)
}
func (m *FetchAttestedNodeResponse) XXX_Size() int {
	return xxx_messageInfo_FetchAttestedNodeResponse.Size(m)
}
func (m *FetchAttestedNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchAttestedNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchAttestedNodeResponse proto.InternalMessageInfo

func (m *FetchAttestedNodeResponse) GetNode() *AttestedNode {
	if m != nil {
		return m.Node
	}
	return nil
}

type ListAttestedNodesRequest struct {
	ByExpiresBefore      *wrappers.Int64Value `protobuf:"bytes,1,opt,name=by_expires_before,json=byExpiresBefore,proto3" json:"by_expires_before,omitempty"`
	Pagination           *Pagination          `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListAttestedNodesRequest) Reset()         { *m = ListAttestedNodesRequest{} }
func (m *ListAttestedNodesRequest) String() string { return proto.CompactTextString(m) }
func (*ListAttestedNodesRequest) ProtoMessage()    {}
func (*ListAttestedNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{22}
}
func (m *ListAttestedNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAttestedNodesRequest.Unmarshal(m, b)
}
func (m *ListAttestedNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAttestedNodesRequest.Marshal(b, m, deterministic)
}
func (dst *ListAttestedNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAttestedNodesRequest.Merge(dst, src)
}
func (m *ListAttestedNodesRequest) XXX_Size() int {
	return xxx_messageInfo_ListAttestedNodesRequest.Size(m)
}
func (m *ListAttestedNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAttestedNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAttestedNodesRequest proto.InternalMessageInfo

func (m *ListAttestedNodesRequest) GetByExpiresBefore() *wrappers.Int64Value {
	if m != nil {
		return m.ByExpiresBefore
	}
	return nil
}

func (m *ListAttestedNodesRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type ListAttestedNodesResponse struct {
	Nodes                []*AttestedNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Pagination           *Pagination     `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListAttestedNodesResponse) Reset()         { *m = ListAttestedNodesResponse{} }
func (m *ListAttestedNodesResponse) String() string { return proto.CompactTextString(m) }
func (*ListAttestedNodesResponse) ProtoMessage()    {}
func (*ListAttestedNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{23}
}
func (m *ListAttestedNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAttestedNodesResponse.Unmarshal(m, b)
}
func (m *ListAttestedNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAttestedNodesResponse.Marshal(b, m, deterministic)
}
func (dst *ListAttestedNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAttestedNodesResponse.Merge(dst, src)
}
func (m *ListAttestedNodesResponse) XXX_Size() int {
	return xxx_messageInfo_ListAttestedNodesResponse.Size(m)
}
func (m *ListAttestedNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAttestedNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAttestedNodesResponse proto.InternalMessageInfo

func (m *ListAttestedNodesResponse) GetNodes() []*AttestedNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *ListAttestedNodesResponse) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type UpdateAttestedNodeRequest struct {
	SpiffeId             string   `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId,proto3" json:"spiffe_id,omitempty"`
	CertSerialNumber     string   `protobuf:"bytes,2,opt,name=cert_serial_number,json=certSerialNumber,proto3" json:"cert_serial_number,omitempty"`
	CertNotAfter         int64    `protobuf:"varint,3,opt,name=cert_not_after,json=certNotAfter,proto3" json:"cert_not_after,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAttestedNodeRequest) Reset()         { *m = UpdateAttestedNodeRequest{} }
func (m *UpdateAttestedNodeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAttestedNodeRequest) ProtoMessage()    {}
func (*UpdateAttestedNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{24}
}
func (m *UpdateAttestedNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAttestedNodeRequest.Unmarshal(m, b)
}
func (m *UpdateAttestedNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAttestedNodeRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateAttestedNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAttestedNodeRequest.Merge(dst, src)
}
func (m *UpdateAttestedNodeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAttestedNodeRequest.Size(m)
}
func (m *UpdateAttestedNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAttestedNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAttestedNodeRequest proto.InternalMessageInfo

func (m *UpdateAttestedNodeRequest) GetSpiffeId() string {
	if m != nil {
		return m.SpiffeId
	}
	return ""
}

func (m *UpdateAttestedNodeRequest) GetCertSerialNumber() string {
	if m != nil {
		return m.CertSerialNumber
	}
	return ""
}

func (m *UpdateAttestedNodeRequest) GetCertNotAfter() int64 {
	if m != nil {
		return m.CertNotAfter
	}
	return 0
}

type UpdateAttestedNodeResponse struct {
	Node                 *AttestedNode `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UpdateAttestedNodeResponse) Reset()         { *m = UpdateAttestedNodeResponse{} }
func (m *UpdateAttestedNodeResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateAttestedNodeResponse) ProtoMessage()    {}
func (*UpdateAttestedNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{25}
}
func (m *UpdateAttestedNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAttestedNodeResponse.Unmarshal(m, b)
}
func (m *UpdateAttestedNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAttestedNodeResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateAttestedNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAttestedNodeResponse.Merge(dst, src)
}
func (m *UpdateAttestedNodeResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateAttestedNodeResponse.Size(m)
}
func (m *UpdateAttestedNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAttestedNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAttestedNodeResponse proto.InternalMessageInfo

func (m *UpdateAttestedNodeResponse) GetNode() *AttestedNode {
	if m != nil {
		return m.Node
	}
	return nil
}

type DeleteAttestedNodeRequest struct {
	SpiffeId             string   `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId,proto3" json:"spiffe_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAttestedNodeRequest) Reset()         { *m = DeleteAttestedNodeRequest{} }
func (m *DeleteAttestedNodeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAttestedNodeRequest) ProtoMessage()    {}
func (*DeleteAttestedNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{26}
}
func (m *DeleteAttestedNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAttestedNodeRequest.Unmarshal(m, b)
}
func (m *DeleteAttestedNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAttestedNodeRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteAttestedNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAttestedNodeRequest.Merge(dst, src)
}
func (m *DeleteAttestedNodeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAttestedNodeRequest.Size(m)
}
func (m *DeleteAttestedNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAttestedNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAttestedNodeRequest proto.InternalMessageInfo

func (m *DeleteAttestedNodeRequest) GetSpiffeId() string {
	if m != nil {
		return m.SpiffeId
	}
	return ""
}

type DeleteAttestedNodeResponse struct {
	Node                 *AttestedNode `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeleteAttestedNodeResponse) Reset()         { *m = DeleteAttestedNodeResponse{} }
func (m *DeleteAttestedNodeResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAttestedNodeResponse) ProtoMessage()    {}
func (*DeleteAttestedNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{27}
}
func (m *DeleteAttestedNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAttestedNodeResponse.Unmarshal(m, b)
}
func (m *DeleteAttestedNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAttestedNodeResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteAttestedNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAttestedNodeResponse.Merge(dst, src)
}
func (m *DeleteAttestedNodeResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAttestedNodeResponse.Size(m)
}
func (m *DeleteAttestedNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAttestedNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAttestedNodeResponse proto.InternalMessageInfo

func (m *DeleteAttestedNodeResponse) GetNode() *AttestedNode {
	if m != nil {
		return m.Node
	}
	return nil
}

type CreateRegistrationEntryRequest struct {
	Entry                *common.RegistrationEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CreateRegistrationEntryRequest) Reset()         { *m = CreateRegistrationEntryRequest{} }
func (m *CreateRegistrationEntryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRegistrationEntryRequest) ProtoMessage()    {}
func (*CreateRegistrationEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{28}
}
func (m *CreateRegistrationEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRegistrationEntryRequest.Unmarshal(m, b)
}
func (m *CreateRegistrationEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRegistrationEntryRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRegistrationEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRegistrationEntryRequest.Merge(dst, src)
}
func (m *CreateRegistrationEntryRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRegistrationEntryRequest.Size(m)
}
func (m *CreateRegistrationEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRegistrationEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRegistrationEntryRequest proto.InternalMessageInfo

func (m *CreateRegistrationEntryRequest) GetEntry() *common.RegistrationEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type CreateRegistrationEntryResponse struct {
	Entry                *common.RegistrationEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CreateRegistrationEntryResponse) Reset()         { *m = CreateRegistrationEntryResponse{} }
func (m *CreateRegistrationEntryResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRegistrationEntryResponse) ProtoMessage()    {}
func (*CreateRegistrationEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{29}
}
func (m *CreateRegistrationEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRegistrationEntryResponse.Unmarshal(m, b)
}
func (m *CreateRegistrationEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRegistrationEntryResponse.Marshal(b, m, deterministic)
}
func (dst *CreateRegistrationEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRegistrationEntryResponse.Merge(dst, src)
}
func (m *CreateRegistrationEntryResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRegistrationEntryResponse.Size(m)
}
func (m *CreateRegistrationEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRegistrationEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRegistrationEntryResponse proto.InternalMessageInfo

func (m *CreateRegistrationEntryResponse) GetEntry() *common.RegistrationEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type FetchRegistrationEntryRequest struct {
	EntryId              string   `protobuf:"bytes,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchRegistrationEntryRequest) Reset()         { *m = FetchRegistrationEntryRequest{} }
func (m *FetchRegistrationEntryRequest) String() string { return proto.CompactTextString(m) }
func (*FetchRegistrationEntryRequest) ProtoMessage()    {}
func (*FetchRegistrationEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{30}
}
func (m *FetchRegistrationEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRegistrationEntryRequest.Unmarshal(m, b)
}
func (m *FetchRegistrationEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRegistrationEntryRequest.Marshal(b, m, deterministic)
}
func (dst *FetchRegistrationEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRegistrationEntryRequest.Merge(dst, src)
}
func (m *FetchRegistrationEntryRequest) XXX_Size() int {
	return xxx_messageInfo_FetchRegistrationEntryRequest.Size(m)
}
func (m *FetchRegistrationEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRegistrationEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRegistrationEntryRequest proto.InternalMessageInfo

func (m *FetchRegistrationEntryRequest) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

type FetchRegistrationEntryResponse struct {
	Entry                *common.RegistrationEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *FetchRegistrationEntryResponse) Reset()         { *m = FetchRegistrationEntryResponse{} }
func (m *FetchRegistrationEntryResponse) String() string { return proto.CompactTextString(m) }
func (*FetchRegistrationEntryResponse) ProtoMessage()    {}
func (*FetchRegistrationEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{31}
}
func (m *FetchRegistrationEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRegistrationEntryResponse.Unmarshal(m, b)
}
func (m *FetchRegistrationEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRegistrationEntryResponse.Marshal(b, m, deterministic)
}
func (dst *FetchRegistrationEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRegistrationEntryResponse.Merge(dst, src)
}
func (m *FetchRegistrationEntryResponse) XXX_Size() int {
	return xxx_messageInfo_FetchRegistrationEntryResponse.Size(m)
}
func (m *FetchRegistrationEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRegistrationEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRegistrationEntryResponse proto.InternalMessageInfo

func (m *FetchRegistrationEntryResponse) GetEntry() *common.RegistrationEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type BySelectors struct {
	Selectors            []*common.Selector        `protobuf:"bytes,1,rep,name=selectors,proto3" json:"selectors,omitempty"`
	Match                BySelectors_MatchBehavior `protobuf:"varint,2,opt,name=match,proto3,enum=spire.server.datastore.BySelectors_MatchBehavior" json:"match,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *BySelectors) Reset()         { *m = BySelectors{} }
func (m *BySelectors) String() string { return proto.CompactTextString(m) }
func (*BySelectors) ProtoMessage()    {}
func (*BySelectors) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{32}
}
func (m *BySelectors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BySelectors.Unmarshal(m, b)
}
func (m *BySelectors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BySelectors.Marshal(b, m, deterministic)
}
func (dst *BySelectors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BySelectors.Merge(dst, src)
}
func (m *BySelectors) XXX_Size() int {
	return xxx_messageInfo_BySelectors.Size(m)
}
func (m *BySelectors) XXX_DiscardUnknown() {
	xxx_messageInfo_BySelectors.DiscardUnknown(m)
}

var xxx_messageInfo_BySelectors proto.InternalMessageInfo

func (m *BySelectors) GetSelectors() []*common.Selector {
	if m != nil {
		return m.Selectors
	}
	return nil
}

func (m *BySelectors) GetMatch() BySelectors_MatchBehavior {
	if m != nil {
		return m.Match
	}
	return BySelectors_MATCH_EXACT
}

type Pagination struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pagination) Reset()         { *m = Pagination{} }
func (m *Pagination) String() string { return proto.CompactTextString(m) }
func (*Pagination) ProtoMessage()    {}
func (*Pagination) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{33}
}
func (m *Pagination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pagination.Unmarshal(m, b)
}
func (m *Pagination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pagination.Marshal(b, m, deterministic)
}
func (dst *Pagination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pagination.Merge(dst, src)
}
func (m *Pagination) XXX_Size() int {
	return xxx_messageInfo_Pagination.Size(m)
}
func (m *Pagination) XXX_DiscardUnknown() {
	xxx_messageInfo_Pagination.DiscardUnknown(m)
}

var xxx_messageInfo_Pagination proto.InternalMessageInfo

func (m *Pagination) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Pagination) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListRegistrationEntriesRequest struct {
	ByParentId           *wrappers.StringValue `protobuf:"bytes,1,opt,name=by_parent_id,json=byParentId,proto3" json:"by_parent_id,omitempty"`
	BySelectors          *BySelectors          `protobuf:"bytes,2,opt,name=by_selectors,json=bySelectors,proto3" json:"by_selectors,omitempty"`
	BySpiffeId           *wrappers.StringValue `protobuf:"bytes,3,opt,name=by_spiffe_id,json=bySpiffeId,proto3" json:"by_spiffe_id,omitempty"`
	Pagination           *Pagination           `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListRegistrationEntriesRequest) Reset()         { *m = ListRegistrationEntriesRequest{} }
func (m *ListRegistrationEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*ListRegistrationEntriesRequest) ProtoMessage()    {}
func (*ListRegistrationEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{34}
}
func (m *ListRegistrationEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRegistrationEntriesRequest.Unmarshal(m, b)
}
func (m *ListRegistrationEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRegistrationEntriesRequest.Marshal(b, m, deterministic)
}
func (dst *ListRegistrationEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRegistrationEntriesRequest.Merge(dst, src)
}
func (m *ListRegistrationEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_ListRegistrationEntriesRequest.Size(m)
}
func (m *ListRegistrationEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRegistrationEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRegistrationEntriesRequest proto.InternalMessageInfo

func (m *ListRegistrationEntriesRequest) GetByParentId() *wrappers.StringValue {
	if m != nil {
		return m.ByParentId
	}
	return nil
}

func (m *ListRegistrationEntriesRequest) GetBySelectors() *BySelectors {
	if m != nil {
		return m.BySelectors
	}
	return nil
}

func (m *ListRegistrationEntriesRequest) GetBySpiffeId() *wrappers.StringValue {
	if m != nil {
		return m.BySpiffeId
	}
	return nil
}

func (m *ListRegistrationEntriesRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type ListRegistrationEntriesResponse struct {
	Entries              []*common.RegistrationEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	Pagination           *Pagination                 `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ListRegistrationEntriesResponse) Reset()         { *m = ListRegistrationEntriesResponse{} }
func (m *ListRegistrationEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*ListRegistrationEntriesResponse) ProtoMessage()    {}
func (*ListRegistrationEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{35}
}
func (m *ListRegistrationEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRegistrationEntriesResponse.Unmarshal(m, b)
}
func (m *ListRegistrationEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRegistrationEntriesResponse.Marshal(b, m, deterministic)
}
func (dst *ListRegistrationEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRegistrationEntriesResponse.Merge(dst, src)
}
func (m *ListRegistrationEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_ListRegistrationEntriesResponse.Size(m)
}
func (m *ListRegistrationEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRegistrationEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRegistrationEntriesResponse proto.InternalMessageInfo

func (m *ListRegistrationEntriesResponse) GetEntries() []*common.RegistrationEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *ListRegistrationEntriesResponse) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type UpdateRegistrationEntryRequest struct {
	Entry                *common.RegistrationEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UpdateRegistrationEntryRequest) Reset()         { *m = UpdateRegistrationEntryRequest{} }
func (m *UpdateRegistrationEntryRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRegistrationEntryRequest) ProtoMessage()    {}
func (*UpdateRegistrationEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{36}
}
func (m *UpdateRegistrationEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRegistrationEntryRequest.Unmarshal(m, b)
}
func (m *UpdateRegistrationEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRegistrationEntryRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateRegistrationEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRegistrationEntryRequest.Merge(dst, src)
}
func (m *UpdateRegistrationEntryRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRegistrationEntryRequest.Size(m)
}
func (m *UpdateRegistrationEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRegistrationEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRegistrationEntryRequest proto.InternalMessageInfo

func (m *UpdateRegistrationEntryRequest) GetEntry() *common.RegistrationEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type UpdateRegistrationEntryResponse struct {
	Entry                *common.RegistrationEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UpdateRegistrationEntryResponse) Reset()         { *m = UpdateRegistrationEntryResponse{} }
func (m *UpdateRegistrationEntryResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateRegistrationEntryResponse) ProtoMessage()    {}
func (*UpdateRegistrationEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{37}
}
func (m *UpdateRegistrationEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRegistrationEntryResponse.Unmarshal(m, b)
}
func (m *UpdateRegistrationEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRegistrationEntryResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateRegistrationEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRegistrationEntryResponse.Merge(dst, src)
}
func (m *UpdateRegistrationEntryResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateRegistrationEntryResponse.Size(m)
}
func (m *UpdateRegistrationEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRegistrationEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRegistrationEntryResponse proto.InternalMessageInfo

func (m *UpdateRegistrationEntryResponse) GetEntry() *common.RegistrationEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type DeleteRegistrationEntryRequest struct {
	EntryId              string   `protobuf:"bytes,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRegistrationEntryRequest) Reset()         { *m = DeleteRegistrationEntryRequest{} }
func (m *DeleteRegistrationEntryRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRegistrationEntryRequest) ProtoMessage()    {}
func (*DeleteRegistrationEntryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{38}
}
func (m *DeleteRegistrationEntryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRegistrationEntryRequest.Unmarshal(m, b)
}
func (m *DeleteRegistrationEntryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRegistrationEntryRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteRegistrationEntryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRegistrationEntryRequest.Merge(dst, src)
}
func (m *DeleteRegistrationEntryRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRegistrationEntryRequest.Size(m)
}
func (m *DeleteRegistrationEntryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRegistrationEntryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRegistrationEntryRequest proto.InternalMessageInfo

func (m *DeleteRegistrationEntryRequest) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

type DeleteRegistrationEntryResponse struct {
	Entry                *common.RegistrationEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DeleteRegistrationEntryResponse) Reset()         { *m = DeleteRegistrationEntryResponse{} }
func (m *DeleteRegistrationEntryResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteRegistrationEntryResponse) ProtoMessage()    {}
func (*DeleteRegistrationEntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{39}
}
func (m *DeleteRegistrationEntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRegistrationEntryResponse.Unmarshal(m, b)
}
func (m *DeleteRegistrationEntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRegistrationEntryResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteRegistrationEntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRegistrationEntryResponse.Merge(dst, src)
}
func (m *DeleteRegistrationEntryResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteRegistrationEntryResponse.Size(m)
}
func (m *DeleteRegistrationEntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRegistrationEntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRegistrationEntryResponse proto.InternalMessageInfo

func (m *DeleteRegistrationEntryResponse) GetEntry() *common.RegistrationEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type JoinToken struct {
	// Token value
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Expiration in seconds since unix epoch
	Expiry               int64    `protobuf:"varint,2,opt,name=expiry,proto3" json:"expiry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinToken) Reset()         { *m = JoinToken{} }
func (m *JoinToken) String() string { return proto.CompactTextString(m) }
func (*JoinToken) ProtoMessage()    {}
func (*JoinToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{40}
}
func (m *JoinToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinToken.Unmarshal(m, b)
}
func (m *JoinToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinToken.Marshal(b, m, deterministic)
}
func (dst *JoinToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinToken.Merge(dst, src)
}
func (m *JoinToken) XXX_Size() int {
	return xxx_messageInfo_JoinToken.Size(m)
}
func (m *JoinToken) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinToken.DiscardUnknown(m)
}

var xxx_messageInfo_JoinToken proto.InternalMessageInfo

func (m *JoinToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *JoinToken) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

type CreateJoinTokenRequest struct {
	JoinToken            *JoinToken `protobuf:"bytes,1,opt,name=join_token,json=joinToken,proto3" json:"join_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateJoinTokenRequest) Reset()         { *m = CreateJoinTokenRequest{} }
func (m *CreateJoinTokenRequest) String() string { return proto.CompactTextString(m) }
func (*CreateJoinTokenRequest) ProtoMessage()    {}
func (*CreateJoinTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{41}
}
func (m *CreateJoinTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateJoinTokenRequest.Unmarshal(m, b)
}
func (m *CreateJoinTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateJoinTokenRequest.Marshal(b, m, deterministic)
}
func (dst *CreateJoinTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateJoinTokenRequest.Merge(dst, src)
}
func (m *CreateJoinTokenRequest) XXX_Size() int {
	return xxx_messageInfo_CreateJoinTokenRequest.Size(m)
}
func (m *CreateJoinTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateJoinTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateJoinTokenRequest proto.InternalMessageInfo

func (m *CreateJoinTokenRequest) GetJoinToken() *JoinToken {
	if m != nil {
		return m.JoinToken
	}
	return nil
}

type CreateJoinTokenResponse struct {
	JoinToken            *JoinToken `protobuf:"bytes,1,opt,name=join_token,json=joinToken,proto3" json:"join_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateJoinTokenResponse) Reset()         { *m = CreateJoinTokenResponse{} }
func (m *CreateJoinTokenResponse) String() string { return proto.CompactTextString(m) }
func (*CreateJoinTokenResponse) ProtoMessage()    {}
func (*CreateJoinTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{42}
}
func (m *CreateJoinTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateJoinTokenResponse.Unmarshal(m, b)
}
func (m *CreateJoinTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateJoinTokenResponse.Marshal(b, m, deterministic)
}
func (dst *CreateJoinTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateJoinTokenResponse.Merge(dst, src)
}
func (m *CreateJoinTokenResponse) XXX_Size() int {
	return xxx_messageInfo_CreateJoinTokenResponse.Size(m)
}
func (m *CreateJoinTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateJoinTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateJoinTokenResponse proto.InternalMessageInfo

func (m *CreateJoinTokenResponse) GetJoinToken() *JoinToken {
	if m != nil {
		return m.JoinToken
	}
	return nil
}

type FetchJoinTokenRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchJoinTokenRequest) Reset()         { *m = FetchJoinTokenRequest{} }
func (m *FetchJoinTokenRequest) String() string { return proto.CompactTextString(m) }
func (*FetchJoinTokenRequest) ProtoMessage()    {}
func (*FetchJoinTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{43}
}
func (m *FetchJoinTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchJoinTokenRequest.Unmarshal(m, b)
}
func (m *FetchJoinTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchJoinTokenRequest.Marshal(b, m, deterministic)
}
func (dst *FetchJoinTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchJoinTokenRequest.Merge(dst, src)
}
func (m *FetchJoinTokenRequest) XXX_Size() int {
	return xxx_messageInfo_FetchJoinTokenRequest.Size(m)
}
func (m *FetchJoinTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchJoinTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchJoinTokenRequest proto.InternalMessageInfo

func (m *FetchJoinTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type FetchJoinTokenResponse struct {
	JoinToken            *JoinToken `protobuf:"bytes,1,opt,name=join_token,json=joinToken,proto3" json:"join_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FetchJoinTokenResponse) Reset()         { *m = FetchJoinTokenResponse{} }
func (m *FetchJoinTokenResponse) String() string { return proto.CompactTextString(m) }
func (*FetchJoinTokenResponse) ProtoMessage()    {}
func (*FetchJoinTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{44}
}
func (m *FetchJoinTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchJoinTokenResponse.Unmarshal(m, b)
}
func (m *FetchJoinTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchJoinTokenResponse.Marshal(b, m, deterministic)
}
func (dst *FetchJoinTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchJoinTokenResponse.Merge(dst, src)
}
func (m *FetchJoinTokenResponse) XXX_Size() int {
	return xxx_messageInfo_FetchJoinTokenResponse.Size(m)
}
func (m *FetchJoinTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchJoinTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchJoinTokenResponse proto.InternalMessageInfo

func (m *FetchJoinTokenResponse) GetJoinToken() *JoinToken {
	if m != nil {
		return m.JoinToken
	}
	return nil
}

type DeleteJoinTokenRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteJoinTokenRequest) Reset()         { *m = DeleteJoinTokenRequest{} }
func (m *DeleteJoinTokenRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteJoinTokenRequest) ProtoMessage()    {}
func (*DeleteJoinTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{45}
}
func (m *DeleteJoinTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteJoinTokenRequest.Unmarshal(m, b)
}
func (m *DeleteJoinTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteJoinTokenRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteJoinTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteJoinTokenRequest.Merge(dst, src)
}
func (m *DeleteJoinTokenRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteJoinTokenRequest.Size(m)
}
func (m *DeleteJoinTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteJoinTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteJoinTokenRequest proto.InternalMessageInfo

func (m *DeleteJoinTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type DeleteJoinTokenResponse struct {
	JoinToken            *JoinToken `protobuf:"bytes,1,opt,name=join_token,json=joinToken,proto3" json:"join_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeleteJoinTokenResponse) Reset()         { *m = DeleteJoinTokenResponse{} }
func (m *DeleteJoinTokenResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteJoinTokenResponse) ProtoMessage()    {}
func (*DeleteJoinTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{46}
}
func (m *DeleteJoinTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteJoinTokenResponse.Unmarshal(m, b)
}
func (m *DeleteJoinTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteJoinTokenResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteJoinTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteJoinTokenResponse.Merge(dst, src)
}
func (m *DeleteJoinTokenResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteJoinTokenResponse.Size(m)
}
func (m *DeleteJoinTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteJoinTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteJoinTokenResponse proto.InternalMessageInfo

func (m *DeleteJoinTokenResponse) GetJoinToken() *JoinToken {
	if m != nil {
		return m.JoinToken
	}
	return nil
}

type PruneJoinTokensRequest struct {
	ExpiresBefore        int64    `protobuf:"varint,1,opt,name=expires_before,json=expiresBefore,proto3" json:"expires_before,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PruneJoinTokensRequest) Reset()         { *m = PruneJoinTokensRequest{} }
func (m *PruneJoinTokensRequest) String() string { return proto.CompactTextString(m) }
func (*PruneJoinTokensRequest) ProtoMessage()    {}
func (*PruneJoinTokensRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{47}
}
func (m *PruneJoinTokensRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PruneJoinTokensRequest.Unmarshal(m, b)
}
func (m *PruneJoinTokensRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PruneJoinTokensRequest.Marshal(b, m, deterministic)
}
func (dst *PruneJoinTokensRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PruneJoinTokensRequest.Merge(dst, src)
}
func (m *PruneJoinTokensRequest) XXX_Size() int {
	return xxx_messageInfo_PruneJoinTokensRequest.Size(m)
}
func (m *PruneJoinTokensRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PruneJoinTokensRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PruneJoinTokensRequest proto.InternalMessageInfo

func (m *PruneJoinTokensRequest) GetExpiresBefore() int64 {
	if m != nil {
		return m.ExpiresBefore
	}
	return 0
}

type PruneJoinTokensResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PruneJoinTokensResponse) Reset()         { *m = PruneJoinTokensResponse{} }
func (m *PruneJoinTokensResponse) String() string { return proto.CompactTextString(m) }
func (*PruneJoinTokensResponse) ProtoMessage()    {}
func (*PruneJoinTokensResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_datastore_d03c549b6d73975c, []int{48}
}
func (m *PruneJoinTokensResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PruneJoinTokensResponse.Unmarshal(m, b)
}
func (m *PruneJoinTokensResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PruneJoinTokensResponse.Marshal(b, m, deterministic)
}
func (dst *PruneJoinTokensResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PruneJoinTokensResponse.Merge(dst, src)
}
func (m *PruneJoinTokensResponse) XXX_Size() int {
	return xxx_messageInfo_PruneJoinTokensResponse.Size(m)
}
func (m *PruneJoinTokensResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PruneJoinTokensResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PruneJoinTokensResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CreateBundleRequest)(nil), "spire.server.datastore.CreateBundleRequest")
	proto.RegisterType((*CreateBundleResponse)(nil), "spire.server.datastore.CreateBundleResponse")
	proto.RegisterType((*FetchBundleRequest)(nil), "spire.server.datastore.FetchBundleRequest")
	proto.RegisterType((*FetchBundleResponse)(nil), "spire.server.datastore.FetchBundleResponse")
	proto.RegisterType((*ListBundlesRequest)(nil), "spire.server.datastore.ListBundlesRequest")
	proto.RegisterType((*ListBundlesResponse)(nil), "spire.server.datastore.ListBundlesResponse")
	proto.RegisterType((*UpdateBundleRequest)(nil), "spire.server.datastore.UpdateBundleRequest")
	proto.RegisterType((*UpdateBundleResponse)(nil), "spire.server.datastore.UpdateBundleResponse")
	proto.RegisterType((*AppendBundleRequest)(nil), "spire.server.datastore.AppendBundleRequest")
	proto.RegisterType((*AppendBundleResponse)(nil), "spire.server.datastore.AppendBundleResponse")
	proto.RegisterType((*DeleteBundleRequest)(nil), "spire.server.datastore.DeleteBundleRequest")
	proto.RegisterType((*DeleteBundleResponse)(nil), "spire.server.datastore.DeleteBundleResponse")
	proto.RegisterType((*NodeSelectors)(nil), "spire.server.datastore.NodeSelectors")
	proto.RegisterType((*SetNodeSelectorsRequest)(nil), "spire.server.datastore.SetNodeSelectorsRequest")
	proto.RegisterType((*SetNodeSelectorsResponse)(nil), "spire.server.datastore.SetNodeSelectorsResponse")
	proto.RegisterType((*GetNodeSelectorsRequest)(nil), "spire.server.datastore.GetNodeSelectorsRequest")
	proto.RegisterType((*GetNodeSelectorsResponse)(nil), "spire.server.datastore.GetNodeSelectorsResponse")
	proto.RegisterType((*AttestedNode)(nil), "spire.server.datastore.AttestedNode")
	proto.RegisterType((*CreateAttestedNodeRequest)(nil), "spire.server.datastore.CreateAttestedNodeRequest")
	proto.RegisterType((*CreateAttestedNodeResponse)(nil), "spire.server.datastore.CreateAttestedNodeResponse")
	proto.RegisterType((*FetchAttestedNodeRequest)(nil), "spire.server.datastore.FetchAttestedNodeRequest")
	proto.RegisterType((*FetchAttestedNodeResponse)(nil), "spire.server.datastore.FetchAttestedNodeResponse")
	proto.RegisterType((*ListAttestedNodesRequest)(nil), "spire.server.datastore.ListAttestedNodesRequest")
	proto.RegisterType((*ListAttestedNodesResponse)(nil), "spire.server.datastore.ListAttestedNodesResponse")
	proto.RegisterType((*UpdateAttestedNodeRequest)(nil), "spire.server.datastore.UpdateAttestedNodeRequest")
	proto.RegisterType((*UpdateAttestedNodeResponse)(nil), "spire.server.datastore.UpdateAttestedNodeResponse")
	proto.RegisterType((*DeleteAttestedNodeRequest)(nil), "spire.server.datastore.DeleteAttestedNodeRequest")
	proto.RegisterType((*DeleteAttestedNodeResponse)(nil), "spire.server.datastore.DeleteAttestedNodeResponse")
	proto.RegisterType((*CreateRegistrationEntryRequest)(nil), "spire.server.datastore.CreateRegistrationEntryRequest")
	proto.RegisterType((*CreateRegistrationEntryResponse)(nil), "spire.server.datastore.CreateRegistrationEntryResponse")
	proto.RegisterType((*FetchRegistrationEntryRequest)(nil), "spire.server.datastore.FetchRegistrationEntryRequest")
	proto.RegisterType((*FetchRegistrationEntryResponse)(nil), "spire.server.datastore.FetchRegistrationEntryResponse")
	proto.RegisterType((*BySelectors)(nil), "spire.server.datastore.BySelectors")
	proto.RegisterType((*Pagination)(nil), "spire.server.datastore.Pagination")
	proto.RegisterType((*ListRegistrationEntriesRequest)(nil), "spire.server.datastore.ListRegistrationEntriesRequest")
	proto.RegisterType((*ListRegistrationEntriesResponse)(nil), "spire.server.datastore.ListRegistrationEntriesResponse")
	proto.RegisterType((*UpdateRegistrationEntryRequest)(nil), "spire.server.datastore.UpdateRegistrationEntryRequest")
	proto.RegisterType((*UpdateRegistrationEntryResponse)(nil), "spire.server.datastore.UpdateRegistrationEntryResponse")
	proto.RegisterType((*DeleteRegistrationEntryRequest)(nil), "spire.server.datastore.DeleteRegistrationEntryRequest")
	proto.RegisterType((*DeleteRegistrationEntryResponse)(nil), "spire.server.datastore.DeleteRegistrationEntryResponse")
	proto.RegisterType((*JoinToken)(nil), "spire.server.datastore.JoinToken")
	proto.RegisterType((*CreateJoinTokenRequest)(nil), "spire.server.datastore.CreateJoinTokenRequest")
	proto.RegisterType((*CreateJoinTokenResponse)(nil), "spire.server.datastore.CreateJoinTokenResponse")
	proto.RegisterType((*FetchJoinTokenRequest)(nil), "spire.server.datastore.FetchJoinTokenRequest")
	proto.RegisterType((*FetchJoinTokenResponse)(nil), "spire.server.datastore.FetchJoinTokenResponse")
	proto.RegisterType((*DeleteJoinTokenRequest)(nil), "spire.server.datastore.DeleteJoinTokenRequest")
	proto.RegisterType((*DeleteJoinTokenResponse)(nil), "spire.server.datastore.DeleteJoinTokenResponse")
	proto.RegisterType((*PruneJoinTokensRequest)(nil), "spire.server.datastore.PruneJoinTokensRequest")
	proto.RegisterType((*PruneJoinTokensResponse)(nil), "spire.server.datastore.PruneJoinTokensResponse")
	proto.RegisterEnum("spire.server.datastore.DeleteBundleRequest_Mode", DeleteBundleRequest_Mode_name, DeleteBundleRequest_Mode_value)
	proto.RegisterEnum("spire.server.datastore.BySelectors_MatchBehavior", BySelectors_MatchBehavior_name, BySelectors_MatchBehavior_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataStoreClient is the client API for DataStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataStoreClient interface {
	// Creates a bundle
	CreateBundle(ctx context.Context, in *CreateBundleRequest, opts ...grpc.CallOption) (*CreateBundleResponse, error)
	// Fetches a specific bundle
	FetchBundle(ctx context.Context, in *FetchBundleRequest, opts ...grpc.CallOption) (*FetchBundleResponse, error)
	// Lists bundles (optionally filtered)
	ListBundles(ctx context.Context, in *ListBundlesRequest, opts ...grpc.CallOption) (*ListBundlesResponse, error)
	// Updates a specific bundle
	UpdateBundle(ctx context.Context, in *UpdateBundleRequest, opts ...grpc.CallOption) (*UpdateBundleResponse, error)
	// Appends contents from a specific bundle (creates if it does not exist)
	AppendBundle(ctx context.Context, in *AppendBundleRequest, opts ...grpc.CallOption) (*AppendBundleResponse, error)
	// Deletes a specific bundle
	DeleteBundle(ctx context.Context, in *DeleteBundleRequest, opts ...grpc.CallOption) (*DeleteBundleResponse, error)
	// Creates an attested node
	CreateAttestedNode(ctx context.Context, in *CreateAttestedNodeRequest, opts ...grpc.CallOption) (*CreateAttestedNodeResponse, error)
	// Fetches a specific attested node
	FetchAttestedNode(ctx context.Context, in *FetchAttestedNodeRequest, opts ...grpc.CallOption) (*FetchAttestedNodeResponse, error)
	// Lists attested nodes (optionally filtered)
	ListAttestedNodes(ctx context.Context, in *ListAttestedNodesRequest, opts ...grpc.CallOption) (*ListAttestedNodesResponse, error)
	// Updates a specific attested node
	UpdateAttestedNode(ctx context.Context, in *UpdateAttestedNodeRequest, opts ...grpc.CallOption) (*UpdateAttestedNodeResponse, error)
	// Deletes a specific attested node
	DeleteAttestedNode(ctx context.Context, in *DeleteAttestedNodeRequest, opts ...grpc.CallOption) (*DeleteAttestedNodeResponse, error)
	// Sets the set of selectors for a specific node id
	SetNodeSelectors(ctx context.Context, in *SetNodeSelectorsRequest, opts ...grpc.CallOption) (*SetNodeSelectorsResponse, error)
	// Gets the set of node selectors for a specific node id
	GetNodeSelectors(ctx context.Context, in *GetNodeSelectorsRequest, opts ...grpc.CallOption) (*GetNodeSelectorsResponse, error)
	// Creates a registration entry
	CreateRegistrationEntry(ctx context.Context, in *CreateRegistrationEntryRequest, opts ...grpc.CallOption) (*CreateRegistrationEntryResponse, error)
	// Fetches a specific registration entry
	FetchRegistrationEntry(ctx context.Context, in *FetchRegistrationEntryRequest, opts ...grpc.CallOption) (*FetchRegistrationEntryResponse, error)
	// Lists registration entries (optionally filtered)
	ListRegistrationEntries(ctx context.Context, in *ListRegistrationEntriesRequest, opts ...grpc.CallOption) (*ListRegistrationEntriesResponse, error)
	// Updates a specific registration entry
	UpdateRegistrationEntry(ctx context.Context, in *UpdateRegistrationEntryRequest, opts ...grpc.CallOption) (*UpdateRegistrationEntryResponse, error)
	// Deletes a specific registration entry
	DeleteRegistrationEntry(ctx context.Context, in *DeleteRegistrationEntryRequest, opts ...grpc.CallOption) (*DeleteRegistrationEntryResponse, error)
	// Creates a join token
	CreateJoinToken(ctx context.Context, in *CreateJoinTokenRequest, opts ...grpc.CallOption) (*CreateJoinTokenResponse, error)
	// Fetches a specific join token
	FetchJoinToken(ctx context.Context, in *FetchJoinTokenRequest, opts ...grpc.CallOption) (*FetchJoinTokenResponse, error)
	// Delete a specific join token
	DeleteJoinToken(ctx context.Context, in *DeleteJoinTokenRequest, opts ...grpc.CallOption) (*DeleteJoinTokenResponse, error)
	// Prunes all join tokens that expire before the specified timestamp
	PruneJoinTokens(ctx context.Context, in *PruneJoinTokensRequest, opts ...grpc.CallOption) (*PruneJoinTokensResponse, error)
	// Applies the plugin configuration
	Configure(ctx context.Context, in *plugin.ConfigureRequest, opts ...grpc.CallOption) (*plugin.ConfigureResponse, error)
	// Returns the version and related metadata of the installed plugin
	GetPluginInfo(ctx context.Context, in *plugin.GetPluginInfoRequest, opts ...grpc.CallOption) (*plugin.GetPluginInfoResponse, error)
}

type dataStoreClient struct {
	cc *grpc.ClientConn
}

func NewDataStoreClient(cc *grpc.ClientConn) DataStoreClient {
	return &dataStoreClient{cc}
}

func (c *dataStoreClient) CreateBundle(ctx context.Context, in *CreateBundleRequest, opts ...grpc.CallOption) (*CreateBundleResponse, error) {
	out := new(CreateBundleResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/CreateBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) FetchBundle(ctx context.Context, in *FetchBundleRequest, opts ...grpc.CallOption) (*FetchBundleResponse, error) {
	out := new(FetchBundleResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/FetchBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) ListBundles(ctx context.Context, in *ListBundlesRequest, opts ...grpc.CallOption) (*ListBundlesResponse, error) {
	out := new(ListBundlesResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/ListBundles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) UpdateBundle(ctx context.Context, in *UpdateBundleRequest, opts ...grpc.CallOption) (*UpdateBundleResponse, error) {
	out := new(UpdateBundleResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/UpdateBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) AppendBundle(ctx context.Context, in *AppendBundleRequest, opts ...grpc.CallOption) (*AppendBundleResponse, error) {
	out := new(AppendBundleResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/AppendBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) DeleteBundle(ctx context.Context, in *DeleteBundleRequest, opts ...grpc.CallOption) (*DeleteBundleResponse, error) {
	out := new(DeleteBundleResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/DeleteBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) CreateAttestedNode(ctx context.Context, in *CreateAttestedNodeRequest, opts ...grpc.CallOption) (*CreateAttestedNodeResponse, error) {
	out := new(CreateAttestedNodeResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/CreateAttestedNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) FetchAttestedNode(ctx context.Context, in *FetchAttestedNodeRequest, opts ...grpc.CallOption) (*FetchAttestedNodeResponse, error) {
	out := new(FetchAttestedNodeResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/FetchAttestedNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) ListAttestedNodes(ctx context.Context, in *ListAttestedNodesRequest, opts ...grpc.CallOption) (*ListAttestedNodesResponse, error) {
	out := new(ListAttestedNodesResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/ListAttestedNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) UpdateAttestedNode(ctx context.Context, in *UpdateAttestedNodeRequest, opts ...grpc.CallOption) (*UpdateAttestedNodeResponse, error) {
	out := new(UpdateAttestedNodeResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/UpdateAttestedNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) DeleteAttestedNode(ctx context.Context, in *DeleteAttestedNodeRequest, opts ...grpc.CallOption) (*DeleteAttestedNodeResponse, error) {
	out := new(DeleteAttestedNodeResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/DeleteAttestedNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) SetNodeSelectors(ctx context.Context, in *SetNodeSelectorsRequest, opts ...grpc.CallOption) (*SetNodeSelectorsResponse, error) {
	out := new(SetNodeSelectorsResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/SetNodeSelectors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) GetNodeSelectors(ctx context.Context, in *GetNodeSelectorsRequest, opts ...grpc.CallOption) (*GetNodeSelectorsResponse, error) {
	out := new(GetNodeSelectorsResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/GetNodeSelectors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) CreateRegistrationEntry(ctx context.Context, in *CreateRegistrationEntryRequest, opts ...grpc.CallOption) (*CreateRegistrationEntryResponse, error) {
	out := new(CreateRegistrationEntryResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/CreateRegistrationEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) FetchRegistrationEntry(ctx context.Context, in *FetchRegistrationEntryRequest, opts ...grpc.CallOption) (*FetchRegistrationEntryResponse, error) {
	out := new(FetchRegistrationEntryResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/FetchRegistrationEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) ListRegistrationEntries(ctx context.Context, in *ListRegistrationEntriesRequest, opts ...grpc.CallOption) (*ListRegistrationEntriesResponse, error) {
	out := new(ListRegistrationEntriesResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/ListRegistrationEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) UpdateRegistrationEntry(ctx context.Context, in *UpdateRegistrationEntryRequest, opts ...grpc.CallOption) (*UpdateRegistrationEntryResponse, error) {
	out := new(UpdateRegistrationEntryResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/UpdateRegistrationEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) DeleteRegistrationEntry(ctx context.Context, in *DeleteRegistrationEntryRequest, opts ...grpc.CallOption) (*DeleteRegistrationEntryResponse, error) {
	out := new(DeleteRegistrationEntryResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/DeleteRegistrationEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) CreateJoinToken(ctx context.Context, in *CreateJoinTokenRequest, opts ...grpc.CallOption) (*CreateJoinTokenResponse, error) {
	out := new(CreateJoinTokenResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/CreateJoinToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) FetchJoinToken(ctx context.Context, in *FetchJoinTokenRequest, opts ...grpc.CallOption) (*FetchJoinTokenResponse, error) {
	out := new(FetchJoinTokenResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/FetchJoinToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) DeleteJoinToken(ctx context.Context, in *DeleteJoinTokenRequest, opts ...grpc.CallOption) (*DeleteJoinTokenResponse, error) {
	out := new(DeleteJoinTokenResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/DeleteJoinToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) PruneJoinTokens(ctx context.Context, in *PruneJoinTokensRequest, opts ...grpc.CallOption) (*PruneJoinTokensResponse, error) {
	out := new(PruneJoinTokensResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/PruneJoinTokens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) Configure(ctx context.Context, in *plugin.ConfigureRequest, opts ...grpc.CallOption) (*plugin.ConfigureResponse, error) {
	out := new(plugin.ConfigureResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/Configure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataStoreClient) GetPluginInfo(ctx context.Context, in *plugin.GetPluginInfoRequest, opts ...grpc.CallOption) (*plugin.GetPluginInfoResponse, error) {
	out := new(plugin.GetPluginInfoResponse)
	err := c.cc.Invoke(ctx, "/spire.server.datastore.DataStore/GetPluginInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataStoreServer is the server API for DataStore service.
type DataStoreServer interface {
	// Creates a bundle
	CreateBundle(context.Context, *CreateBundleRequest) (*CreateBundleResponse, error)
	// Fetches a specific bundle
	FetchBundle(context.Context, *FetchBundleRequest) (*FetchBundleResponse, error)
	// Lists bundles (optionally filtered)
	ListBundles(context.Context, *ListBundlesRequest) (*ListBundlesResponse, error)
	// Updates a specific bundle
	UpdateBundle(context.Context, *UpdateBundleRequest) (*UpdateBundleResponse, error)
	// Appends contents from a specific bundle (creates if it does not exist)
	AppendBundle(context.Context, *AppendBundleRequest) (*AppendBundleResponse, error)
	// Deletes a specific bundle
	DeleteBundle(context.Context, *DeleteBundleRequest) (*DeleteBundleResponse, error)
	// Creates an attested node
	CreateAttestedNode(context.Context, *CreateAttestedNodeRequest) (*CreateAttestedNodeResponse, error)
	// Fetches a specific attested node
	FetchAttestedNode(context.Context, *FetchAttestedNodeRequest) (*FetchAttestedNodeResponse, error)
	// Lists attested nodes (optionally filtered)
	ListAttestedNodes(context.Context, *ListAttestedNodesRequest) (*ListAttestedNodesResponse, error)
	// Updates a specific attested node
	UpdateAttestedNode(context.Context, *UpdateAttestedNodeRequest) (*UpdateAttestedNodeResponse, error)
	// Deletes a specific attested node
	DeleteAttestedNode(context.Context, *DeleteAttestedNodeRequest) (*DeleteAttestedNodeResponse, error)
	// Sets the set of selectors for a specific node id
	SetNodeSelectors(context.Context, *SetNodeSelectorsRequest) (*SetNodeSelectorsResponse, error)
	// Gets the set of node selectors for a specific node id
	GetNodeSelectors(context.Context, *GetNodeSelectorsRequest) (*GetNodeSelectorsResponse, error)
	// Creates a registration entry
	CreateRegistrationEntry(context.Context, *CreateRegistrationEntryRequest) (*CreateRegistrationEntryResponse, error)
	// Fetches a specific registration entry
	FetchRegistrationEntry(context.Context, *FetchRegistrationEntryRequest) (*FetchRegistrationEntryResponse, error)
	// Lists registration entries (optionally filtered)
	ListRegistrationEntries(context.Context, *ListRegistrationEntriesRequest) (*ListRegistrationEntriesResponse, error)
	// Updates a specific registration entry
	UpdateRegistrationEntry(context.Context, *UpdateRegistrationEntryRequest) (*UpdateRegistrationEntryResponse, error)
	// Deletes a specific registration entry
	DeleteRegistrationEntry(context.Context, *DeleteRegistrationEntryRequest) (*DeleteRegistrationEntryResponse, error)
	// Creates a join token
	CreateJoinToken(context.Context, *CreateJoinTokenRequest) (*CreateJoinTokenResponse, error)
	// Fetches a specific join token
	FetchJoinToken(context.Context, *FetchJoinTokenRequest) (*FetchJoinTokenResponse, error)
	// Delete a specific join token
	DeleteJoinToken(context.Context, *DeleteJoinTokenRequest) (*DeleteJoinTokenResponse, error)
	// Prunes all join tokens that expire before the specified timestamp
	PruneJoinTokens(context.Context, *PruneJoinTokensRequest) (*PruneJoinTokensResponse, error)
	// Applies the plugin configuration
	Configure(context.Context, *plugin.ConfigureRequest) (*plugin.ConfigureResponse, error)
	// Returns the version and related metadata of the installed plugin
	GetPluginInfo(context.Context, *plugin.GetPluginInfoRequest) (*plugin.GetPluginInfoResponse, error)
}

func RegisterDataStoreServer(s *grpc.Server, srv DataStoreServer) {
	s.RegisterService(&_DataStore_serviceDesc, srv)
}

func _DataStore_CreateBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).CreateBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/CreateBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).CreateBundle(ctx, req.(*CreateBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_FetchBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).FetchBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/FetchBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).FetchBundle(ctx, req.(*FetchBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_ListBundles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBundlesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).ListBundles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/ListBundles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).ListBundles(ctx, req.(*ListBundlesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_UpdateBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).UpdateBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/UpdateBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).UpdateBundle(ctx, req.(*UpdateBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_AppendBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).AppendBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/AppendBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).AppendBundle(ctx, req.(*AppendBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_DeleteBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).DeleteBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/DeleteBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).DeleteBundle(ctx, req.(*DeleteBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_CreateAttestedNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAttestedNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).CreateAttestedNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/CreateAttestedNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).CreateAttestedNode(ctx, req.(*CreateAttestedNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_FetchAttestedNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchAttestedNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).FetchAttestedNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/FetchAttestedNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).FetchAttestedNode(ctx, req.(*FetchAttestedNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_ListAttestedNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAttestedNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).ListAttestedNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/ListAttestedNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).ListAttestedNodes(ctx, req.(*ListAttestedNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_UpdateAttestedNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAttestedNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).UpdateAttestedNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/UpdateAttestedNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).UpdateAttestedNode(ctx, req.(*UpdateAttestedNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_DeleteAttestedNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAttestedNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).DeleteAttestedNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/DeleteAttestedNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).DeleteAttestedNode(ctx, req.(*DeleteAttestedNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_SetNodeSelectors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNodeSelectorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).SetNodeSelectors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/SetNodeSelectors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).SetNodeSelectors(ctx, req.(*SetNodeSelectorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_GetNodeSelectors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeSelectorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).GetNodeSelectors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/GetNodeSelectors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).GetNodeSelectors(ctx, req.(*GetNodeSelectorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_CreateRegistrationEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRegistrationEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).CreateRegistrationEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/CreateRegistrationEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).CreateRegistrationEntry(ctx, req.(*CreateRegistrationEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_FetchRegistrationEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchRegistrationEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).FetchRegistrationEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/FetchRegistrationEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).FetchRegistrationEntry(ctx, req.(*FetchRegistrationEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_ListRegistrationEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRegistrationEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).ListRegistrationEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/ListRegistrationEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).ListRegistrationEntries(ctx, req.(*ListRegistrationEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_UpdateRegistrationEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRegistrationEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).UpdateRegistrationEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/UpdateRegistrationEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).UpdateRegistrationEntry(ctx, req.(*UpdateRegistrationEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_DeleteRegistrationEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRegistrationEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).DeleteRegistrationEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/DeleteRegistrationEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).DeleteRegistrationEntry(ctx, req.(*DeleteRegistrationEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_CreateJoinToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJoinTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).CreateJoinToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/CreateJoinToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).CreateJoinToken(ctx, req.(*CreateJoinTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_FetchJoinToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchJoinTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).FetchJoinToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/FetchJoinToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).FetchJoinToken(ctx, req.(*FetchJoinTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_DeleteJoinToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteJoinTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).DeleteJoinToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/DeleteJoinToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).DeleteJoinToken(ctx, req.(*DeleteJoinTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_PruneJoinTokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PruneJoinTokensRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).PruneJoinTokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/PruneJoinTokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).PruneJoinTokens(ctx, req.(*PruneJoinTokensRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_Configure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(plugin.ConfigureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).Configure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/Configure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).Configure(ctx, req.(*plugin.ConfigureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataStore_GetPluginInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(plugin.GetPluginInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataStoreServer).GetPluginInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.server.datastore.DataStore/GetPluginInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataStoreServer).GetPluginInfo(ctx, req.(*plugin.GetPluginInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "spire.server.datastore.DataStore",
	HandlerType: (*DataStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBundle",
			Handler:    _DataStore_CreateBundle_Handler,
		},
		{
			MethodName: "FetchBundle",
			Handler:    _DataStore_FetchBundle_Handler,
		},
		{
			MethodName: "ListBundles",
			Handler:    _DataStore_ListBundles_Handler,
		},
		{
			MethodName: "UpdateBundle",
			Handler:    _DataStore_UpdateBundle_Handler,
		},
		{
			MethodName: "AppendBundle",
			Handler:    _DataStore_AppendBundle_Handler,
		},
		{
			MethodName: "DeleteBundle",
			Handler:    _DataStore_DeleteBundle_Handler,
		},
		{
			MethodName: "CreateAttestedNode",
			Handler:    _DataStore_CreateAttestedNode_Handler,
		},
		{
			MethodName: "FetchAttestedNode",
			Handler:    _DataStore_FetchAttestedNode_Handler,
		},
		{
			MethodName: "ListAttestedNodes",
			Handler:    _DataStore_ListAttestedNodes_Handler,
		},
		{
			MethodName: "UpdateAttestedNode",
			Handler:    _DataStore_UpdateAttestedNode_Handler,
		},
		{
			MethodName: "DeleteAttestedNode",
			Handler:    _DataStore_DeleteAttestedNode_Handler,
		},
		{
			MethodName: "SetNodeSelectors",
			Handler:    _DataStore_SetNodeSelectors_Handler,
		},
		{
			MethodName: "GetNodeSelectors",
			Handler:    _DataStore_GetNodeSelectors_Handler,
		},
		{
			MethodName: "CreateRegistrationEntry",
			Handler:    _DataStore_CreateRegistrationEntry_Handler,
		},
		{
			MethodName: "FetchRegistrationEntry",
			Handler:    _DataStore_FetchRegistrationEntry_Handler,
		},
		{
			MethodName: "ListRegistrationEntries",
			Handler:    _DataStore_ListRegistrationEntries_Handler,
		},
		{
			MethodName: "UpdateRegistrationEntry",
			Handler:    _DataStore_UpdateRegistrationEntry_Handler,
		},
		{
			MethodName: "DeleteRegistrationEntry",
			Handler:    _DataStore_DeleteRegistrationEntry_Handler,
		},
		{
			MethodName: "CreateJoinToken",
			Handler:    _DataStore_CreateJoinToken_Handler,
		},
		{
			MethodName: "FetchJoinToken",
			Handler:    _DataStore_FetchJoinToken_Handler,
		},
		{
			MethodName: "DeleteJoinToken",
			Handler:    _DataStore_DeleteJoinToken_Handler,
		},
		{
			MethodName: "PruneJoinTokens",
			Handler:    _DataStore_PruneJoinTokens_Handler,
		},
		{
			MethodName: "Configure",
			Handler:    _DataStore_Configure_Handler,
		},
		{
			MethodName: "GetPluginInfo",
			Handler:    _DataStore_GetPluginInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/server/datastore/datastore.proto",
}

func init() {
	proto.RegisterFile("proto/server/datastore/datastore.proto", fileDescriptor_datastore_d03c549b6d73975c)
}

var fileDescriptor_datastore_d03c549b6d73975c = []byte{
	// 1635 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x59, 0x5b, 0x6f, 0xdb, 0xc6,
	0x12, 0x0e, 0x7d, 0x8b, 0x35, 0x92, 0x2f, 0x59, 0x3b, 0xb6, 0xa4, 0x9c, 0x63, 0xfb, 0xf0, 0x24,
	0x41, 0x9a, 0x0b, 0xe5, 0xa8, 0x89, 0x73, 0x69, 0xd1, 0xd4, 0x96, 0x15, 0x57, 0x45, 0x92, 0x1a,
	0x94, 0xec, 0x04, 0x09, 0x50, 0x81, 0x32, 0x57, 0x32, 0x53, 0x9b, 0x64, 0xc9, 0x55, 0x1a, 0x25,
	0x3f, 0xa0, 0x40, 0xd1, 0x7f, 0xd0, 0x97, 0xbe, 0xf5, 0xa5, 0x40, 0x1f, 0x8a, 0xbe, 0xf7, 0xa7,
	0x15, 0xdc, 0x25, 0x45, 0x52, 0xe4, 0xd2, 0x94, 0xe4, 0x3e, 0xd9, 0xdc, 0x9d, 0xf9, 0xe6, 0xdb,
	0xd9, 0xd9, 0xd9, 0xd9, 0x11, 0x5c, 0x37, 0x2d, 0x83, 0x18, 0x25, 0x1b, 0x5b, 0xef, 0xb0, 0x55,
	0x52, 0x15, 0xa2, 0xd8, 0xc4, 0xb0, 0xb0, 0xff, 0x9f, 0x44, 0x05, 0xd0, 0x8a, 0x6d, 0x6a, 0x16,
	0x96, 0x98, 0x9c, 0xd4, 0x9f, 0x2d, 0xae, 0x75, 0x0c, 0xa3, 0x73, 0x82, 0x4b, 0x54, 0xaa, 0xd5,
	0x6d, 0x97, 0x7e, 0xb0, 0x14, 0xd3, 0xc4, 0x96, 0xcd, 0xf4, 0x8a, 0x1b, 0x0c, 0xff, 0xc8, 0x38,
	0x3d, 0x35, 0xf4, 0x92, 0x79, 0xd2, 0xed, 0x68, 0xde, 0x1f, 0x57, 0xa2, 0x10, 0x92, 0x60, 0x7f,
	0xd8, 0x94, 0x58, 0x81, 0xa5, 0x8a, 0x85, 0x15, 0x82, 0x77, 0xba, 0xba, 0x7a, 0x82, 0x65, 0xfc,
	0x7d, 0x17, 0xdb, 0x04, 0xdd, 0x86, 0x99, 0x16, 0x1d, 0xc8, 0x0b, 0x1b, 0xc2, 0x8d, 0x6c, 0x79,
	0x59, 0x62, 0xe4, 0x5c, 0x5d, 0x57, 0xd8, 0x95, 0x11, 0x77, 0x61, 0x39, 0x0c, 0x62, 0x9b, 0x86,
	0x6e, 0xe3, 0x21, 0x51, 0x3e, 0x07, 0xf4, 0x14, 0x93, 0xa3, 0xe3, 0x30, 0x93, 0xeb, 0xb0, 0x40,
	0xac, 0xae, 0x4d, 0x9a, 0xaa, 0x71, 0xaa, 0x68, 0x7a, 0x53, 0x53, 0x29, 0x58, 0x46, 0x9e, 0xa3,
	0xc3, 0xbb, 0x74, 0xb4, 0xa6, 0x3a, 0x0b, 0x09, 0x69, 0x8f, 0x44, 0x61, 0x19, 0xd0, 0x33, 0xcd,
	0x26, 0x6c, 0xd4, 0x76, 0x29, 0x88, 0x55, 0x58, 0x0a, 0x8d, 0xba, 0xd0, 0x12, 0x5c, 0x64, 0x6a,
	0x76, 0x5e, 0xd8, 0x98, 0xe4, 0x62, 0x7b, 0x42, 0x0e, 0xc3, 0x03, 0x53, 0x1d, 0xdf, 0xd5, 0x61,
	0x90, 0x91, 0xd6, 0x59, 0x81, 0xa5, 0x6d, 0xd3, 0xc4, 0xba, 0x3a, 0x26, 0x95, 0x30, 0xc8, 0x48,
	0x54, 0xfe, 0x12, 0x60, 0x69, 0x17, 0x9f, 0xe0, 0x41, 0xb7, 0xa4, 0xdc, 0x77, 0xb4, 0x0b, 0x53,
	0xa7, 0x86, 0x8a, 0xf3, 0x13, 0x1b, 0xc2, 0x8d, 0xf9, 0xf2, 0xa6, 0x14, 0x7f, 0x88, 0xa4, 0x18,
	0x13, 0xd2, 0x73, 0x43, 0xc5, 0x32, 0xd5, 0x16, 0x37, 0x61, 0xca, 0xf9, 0x42, 0x39, 0x98, 0x95,
	0xab, 0xf5, 0x86, 0x5c, 0xab, 0x34, 0x16, 0x2f, 0x20, 0x80, 0x99, 0xdd, 0xea, 0xb3, 0x6a, 0xa3,
	0xba, 0x28, 0xa0, 0x79, 0x80, 0xdd, 0x5a, 0xbd, 0xfe, 0x4d, 0xa5, 0xb6, 0xdd, 0xa8, 0x2e, 0x4e,
	0x38, 0xab, 0x0f, 0x63, 0x8e, 0xb4, 0xfa, 0x16, 0xcc, 0xbd, 0x30, 0x54, 0x5c, 0xc7, 0x27, 0xf8,
	0x88, 0x18, 0x96, 0x8d, 0xae, 0x40, 0xc6, 0x36, 0xb5, 0x76, 0x1b, 0xfb, 0x0b, 0x9e, 0x65, 0x03,
	0x35, 0x15, 0xdd, 0x83, 0x8c, 0xed, 0x49, 0xe6, 0x27, 0x68, 0xcc, 0xad, 0x84, 0xe1, 0x3d, 0x20,
	0xd9, 0x17, 0x14, 0xbf, 0x85, 0xd5, 0x3a, 0x26, 0x21, 0x33, 0x9e, 0x93, 0x2b, 0x41, 0x40, 0xc6,
	0xf7, 0x1a, 0xcf, 0x83, 0x61, 0x80, 0x00, 0x7e, 0x11, 0xf2, 0x51, 0x7c, 0xe6, 0x0d, 0x71, 0x0b,
	0x56, 0xf7, 0x38, 0xb6, 0x93, 0x56, 0x2a, 0x36, 0x21, 0xbf, 0xc7, 0xc1, 0x3c, 0x1f, 0xd2, 0x7f,
	0x0a, 0x90, 0xdb, 0x26, 0x04, 0xdb, 0x04, 0xab, 0x8e, 0x50, 0xb2, 0xe3, 0xcb, 0x70, 0x59, 0xa1,
	0xc2, 0x0a, 0xd1, 0x0c, 0xbd, 0xe9, 0xe0, 0x37, 0x49, 0xcf, 0x64, 0x51, 0x97, 0x91, 0x97, 0x02,
	0x93, 0xbb, 0x0a, 0x51, 0x1a, 0x3d, 0xd3, 0x09, 0x04, 0x74, 0x84, 0x2d, 0xd2, 0xb4, 0xb1, 0xa5,
	0x29, 0x27, 0x4d, 0xbd, 0x7b, 0xda, 0xc2, 0x56, 0x7e, 0x92, 0x2a, 0x2c, 0x3a, 0x33, 0x75, 0x3a,
	0xf1, 0x82, 0x8e, 0xa3, 0xab, 0x30, 0x4f, 0xa5, 0x75, 0x83, 0x34, 0x95, 0x36, 0xc1, 0x56, 0x7e,
	0x6a, 0x43, 0xb8, 0x31, 0x29, 0xe7, 0x9c, 0xd1, 0x17, 0x06, 0xd9, 0x76, 0xc6, 0xc4, 0x03, 0x28,
	0xb0, 0x44, 0x1b, 0xa4, 0xee, 0x39, 0xf4, 0x21, 0x4c, 0xe9, 0xce, 0x49, 0x60, 0x2e, 0xb9, 0xca,
	0x73, 0x49, 0x48, 0x95, 0x6a, 0x88, 0x87, 0x50, 0x8c, 0x83, 0x75, 0xfd, 0x3d, 0x3a, 0xee, 0x03,
	0xc8, 0xd3, 0x9c, 0x1c, 0xc7, 0x36, 0x71, 0xfb, 0x0f, 0xa0, 0x10, 0xa3, 0x38, 0x36, 0x9f, 0xdf,
	0x04, 0xc8, 0x3b, 0x99, 0x3c, 0x38, 0xd5, 0x8f, 0xc7, 0x3d, 0xb8, 0xd4, 0xea, 0x35, 0xf1, 0x7b,
	0x07, 0xcd, 0x6e, 0xb6, 0x70, 0xdb, 0xb0, 0x3c, 0x1b, 0x57, 0x24, 0x76, 0x05, 0x4b, 0xde, 0x15,
	0x2c, 0xd5, 0x74, 0xb2, 0x75, 0xef, 0x50, 0x39, 0xe9, 0x62, 0x79, 0xa1, 0xd5, 0xab, 0x32, 0xa5,
	0x1d, 0xaa, 0x83, 0x76, 0x00, 0x4c, 0xa5, 0xa3, 0xe9, 0x34, 0x1c, 0x68, 0x84, 0x64, 0xcb, 0x22,
	0x8f, 0xe5, 0x7e, 0x5f, 0x52, 0x0e, 0x68, 0x89, 0xbf, 0x08, 0x50, 0x88, 0x61, 0xea, 0x7a, 0xe0,
	0x31, 0x4c, 0x3b, 0xeb, 0xf1, 0xee, 0x9d, 0x74, 0x2e, 0x60, 0x2a, 0xe7, 0xc2, 0xee, 0x67, 0x01,
	0x0a, 0xec, 0x16, 0x1a, 0x76, 0x67, 0x39, 0xa7, 0x62, 0x22, 0xf5, 0xa9, 0x98, 0x8c, 0x39, 0x15,
	0x87, 0x50, 0x8c, 0x63, 0x33, 0x76, 0xb8, 0x3c, 0x84, 0x02, 0x4b, 0xf1, 0x43, 0xc7, 0xef, 0x21,
	0x14, 0xe3, 0x34, 0xc7, 0x66, 0xf4, 0x12, 0xd6, 0xd8, 0x41, 0x95, 0x71, 0x47, 0xb3, 0x89, 0x45,
	0xb7, 0xa3, 0xaa, 0x13, 0xab, 0xe7, 0xd1, 0xba, 0x0f, 0xd3, 0xd8, 0xf9, 0x76, 0xc1, 0xd7, 0xc3,
	0xd7, 0x43, 0x54, 0x8d, 0x49, 0x8b, 0xaf, 0x60, 0x9d, 0x0b, 0xec, 0xb2, 0x1e, 0x11, 0xf9, 0x31,
	0xfc, 0x97, 0x1e, 0x65, 0x2e, 0xe3, 0x02, 0xcc, 0x52, 0x49, 0xdf, 0x8f, 0x17, 0xe9, 0x77, 0x4d,
	0x75, 0x96, 0xcb, 0xd3, 0x1d, 0x8f, 0xd4, 0xdf, 0x02, 0x64, 0x77, 0x7a, 0xfe, 0xad, 0x7b, 0x2f,
	0x7c, 0xa5, 0xa4, 0xbb, 0x58, 0xd1, 0x1e, 0x4c, 0x9f, 0x2a, 0xe4, 0xe8, 0xd8, 0xad, 0x3d, 0xee,
	0xf2, 0x36, 0x32, 0x60, 0x49, 0x7a, 0xee, 0x28, 0xec, 0xe0, 0x63, 0xe5, 0x9d, 0x66, 0x58, 0x32,
	0xd3, 0x17, 0xcb, 0x30, 0x17, 0x1a, 0x47, 0x0b, 0x90, 0x7d, 0xbe, 0xdd, 0xa8, 0x7c, 0xd5, 0xac,
	0xbe, 0xda, 0xa6, 0x95, 0xc8, 0x22, 0xe4, 0xd8, 0x40, 0xfd, 0x60, 0xa7, 0x5e, 0x6d, 0x2c, 0x0a,
	0xe2, 0x13, 0x00, 0xff, 0x74, 0xa2, 0x65, 0x98, 0x26, 0xc6, 0x77, 0x58, 0x77, 0x3d, 0xc8, 0x3e,
	0x9c, 0x18, 0x35, 0x95, 0x0e, 0x6e, 0xda, 0xda, 0x07, 0x76, 0x55, 0x4d, 0xcb, 0xb3, 0xce, 0x40,
	0x5d, 0xfb, 0x80, 0xc5, 0xdf, 0x27, 0x60, 0xcd, 0x49, 0x31, 0x83, 0x4e, 0xd2, 0xfc, 0x94, 0xf8,
	0x05, 0xe4, 0x5a, 0xbd, 0xa6, 0xa9, 0x58, 0x58, 0x27, 0xde, 0xf6, 0x64, 0xcb, 0xff, 0x89, 0x64,
	0xc3, 0x3a, 0xb1, 0x34, 0xbd, 0xc3, 0xd2, 0x21, 0xb4, 0x7a, 0xfb, 0x54, 0xa1, 0xa6, 0xa2, 0xa7,
	0x54, 0x3f, 0x58, 0xb2, 0x38, 0xfa, 0xff, 0x4f, 0xe1, 0x27, 0x39, 0xdb, 0x0a, 0x6c, 0x0f, 0xe3,
	0xe1, 0x1f, 0xb7, 0xc9, 0x74, 0x3c, 0xea, 0x5e, 0xd2, 0x09, 0xe7, 0xbc, 0xa9, 0x91, 0x72, 0xde,
	0xaf, 0x02, 0xac, 0x73, 0xdd, 0xe5, 0x46, 0xe3, 0x23, 0xa0, 0xa1, 0xab, 0xf5, 0x33, 0xf3, 0x99,
	0xf1, 0xe8, 0xc9, 0x9f, 0x4b, 0x5a, 0x7e, 0x09, 0x6b, 0x2c, 0x0f, 0xfe, 0x0b, 0xd9, 0x81, 0x0b,
	0x3c, 0xde, 0x41, 0xfc, 0x0c, 0xd6, 0x58, 0xa2, 0x1c, 0x25, 0x3d, 0xbc, 0x82, 0x75, 0xae, 0xf2,
	0x78, 0xb4, 0x1e, 0x41, 0xe6, 0x6b, 0x43, 0xd3, 0x1b, 0xf4, 0x14, 0xc5, 0x9f, 0xad, 0x15, 0x98,
	0xa1, 0xb5, 0x42, 0x8f, 0x6e, 0xd6, 0xa4, 0xec, 0x7e, 0x89, 0xaf, 0x61, 0x85, 0x65, 0xd2, 0x3e,
	0x80, 0xb7, 0x92, 0x2f, 0x01, 0xde, 0x1a, 0x9a, 0xde, 0xf4, 0xc1, 0xb2, 0xe5, 0xff, 0xf1, 0xb6,
	0xd8, 0xd7, 0xce, 0xbc, 0xf5, 0xfe, 0x15, 0xdf, 0xc0, 0x6a, 0x04, 0xdb, 0x5d, 0xe8, 0xf8, 0xe0,
	0x77, 0xe0, 0x32, 0x4d, 0xb6, 0x11, 0xde, 0xb1, 0xeb, 0x77, 0xd6, 0x39, 0x28, 0x7e, 0x6e, 0x54,
	0x24, 0x58, 0x61, 0x1b, 0x9b, 0x92, 0xcb, 0x1b, 0x58, 0x8d, 0xc8, 0x9f, 0x1b, 0x99, 0x27, 0xb0,
	0xb2, 0x6f, 0x75, 0x75, 0x1f, 0xbb, 0x9f, 0x1e, 0xaf, 0xc1, 0x7c, 0x4c, 0xb9, 0x38, 0x29, 0xcf,
	0xe1, 0x60, 0x3d, 0x28, 0x16, 0x60, 0x35, 0x02, 0xc0, 0xd8, 0x95, 0xff, 0x58, 0x81, 0x8c, 0xf3,
	0x60, 0xa8, 0x3b, 0xe6, 0x91, 0x06, 0xb9, 0x60, 0x1b, 0x05, 0xdd, 0xe2, 0xf1, 0x8c, 0xe9, 0xd8,
	0x14, 0x6f, 0xa7, 0x13, 0x76, 0xdd, 0xd2, 0x86, 0x6c, 0xa0, 0x5b, 0x82, 0x6e, 0xf2, 0x94, 0xa3,
	0x0d, 0x99, 0xe2, 0xad, 0x54, 0xb2, 0xbe, 0x9d, 0x40, 0xeb, 0x84, 0x6f, 0x27, 0xda, 0x75, 0xe1,
	0xdb, 0x89, 0xeb, 0xc5, 0x68, 0x90, 0x0b, 0xb6, 0x45, 0xf8, 0xae, 0x8b, 0xe9, 0xc0, 0xf0, 0x5d,
	0x17, 0xdb, 0x69, 0xd1, 0x20, 0x17, 0x6c, 0x7b, 0xf0, 0x4d, 0xc5, 0x74, 0x58, 0xf8, 0xa6, 0x62,
	0x3b, 0x29, 0x1a, 0xe4, 0x82, 0x3d, 0x06, 0xbe, 0xa9, 0x98, 0xee, 0x06, 0xdf, 0x54, 0x6c, 0xdb,
	0xe2, 0x23, 0xa0, 0xe8, 0x13, 0x10, 0xdd, 0x4d, 0x0e, 0xaa, 0x98, 0xba, 0xb8, 0x58, 0x1e, 0x46,
	0xc5, 0x35, 0xfe, 0x1e, 0x2e, 0x45, 0x9e, 0x7b, 0x68, 0x33, 0x31, 0xce, 0xe2, 0x4c, 0xdf, 0x1d,
	0x42, 0xc3, 0xb7, 0x1c, 0x79, 0x66, 0xf1, 0x2d, 0xf3, 0xde, 0x8e, 0x7c, 0xcb, 0xfc, 0x37, 0xdc,
	0x47, 0x40, 0xd1, 0x47, 0x0b, 0xdf, 0xe1, 0xdc, 0xe7, 0x16, 0xdf, 0xe1, 0x09, 0x6f, 0xa2, 0x8f,
	0x80, 0xa2, 0xef, 0x13, 0xbe, 0x71, 0xee, 0x2b, 0x88, 0x6f, 0x3c, 0xe1, 0xf9, 0xd3, 0x85, 0xc5,
	0xc1, 0x7e, 0x11, 0x2a, 0xf1, 0x70, 0x38, 0x9d, 0xab, 0xe2, 0x66, 0x7a, 0x05, 0xdf, 0xec, 0x5e,
	0x6a, 0xb3, 0x7b, 0xc3, 0x9a, 0xe5, 0x76, 0xab, 0x7e, 0x12, 0xbc, 0x4b, 0x3b, 0x52, 0x6d, 0xa0,
	0xad, 0xe4, 0xb3, 0xc2, 0xab, 0x89, 0x8a, 0x0f, 0x86, 0xd6, 0x73, 0xc9, 0xfc, 0x28, 0xb8, 0xb7,
	0x76, 0x94, 0xcb, 0xfd, 0xc4, 0xc3, 0xc3, 0xa5, 0xb2, 0x35, 0xac, 0x5a, 0xc0, 0x2d, 0x9c, 0x72,
	0x9a, 0xef, 0x96, 0xe4, 0xe7, 0x0a, 0xdf, 0x2d, 0x67, 0xd5, 0xed, 0x0e, 0x19, 0x4e, 0x81, 0xcb,
	0x27, 0x93, 0x5c, 0x6a, 0xf3, 0xc9, 0x9c, 0x55, 0x49, 0x3b, 0x64, 0x38, 0x65, 0x2d, 0x9f, 0x4c,
	0x72, 0x11, 0xcd, 0x27, 0x73, 0x56, 0xfd, 0x6c, 0xc1, 0xc2, 0x40, 0xc5, 0x89, 0xa4, 0xe4, 0xe0,
	0x1b, 0x2c, 0xd9, 0x8a, 0xa5, 0xd4, 0xf2, 0xae, 0x4d, 0x03, 0xe6, 0xc3, 0x95, 0x25, 0xba, 0x93,
	0x18, 0x64, 0x11, 0x8b, 0x52, 0x5a, 0x71, 0x7f, 0x91, 0x03, 0xe5, 0x23, 0x7f, 0x91, 0xf1, 0x75,
	0x29, 0x7f, 0x91, 0xbc, 0xba, 0xd4, 0x82, 0x85, 0x81, 0xa2, 0x90, 0x6f, 0x33, 0xbe, 0xfc, 0xe4,
	0xdb, 0xe4, 0x54, 0x9b, 0xe8, 0x35, 0x64, 0x2a, 0x86, 0xde, 0xd6, 0x3a, 0x5d, 0x0b, 0xa3, 0x6b,
	0xe1, 0xa7, 0x90, 0xfb, 0x7b, 0x61, 0x7f, 0xde, 0x33, 0x72, 0xfd, 0x2c, 0xb1, 0x7e, 0xa1, 0x37,
	0xb7, 0x87, 0xc9, 0x3e, 0x9d, 0xae, 0xe9, 0x6d, 0x03, 0x7d, 0x12, 0xab, 0x18, 0x92, 0xf1, 0x6c,
	0xdc, 0x4c, 0x23, 0xca, 0xec, 0xec, 0x6c, 0xbe, 0x96, 0x3a, 0x1a, 0x39, 0xee, 0xb6, 0x1c, 0xe9,
	0x12, 0x6b, 0x09, 0x94, 0xa8, 0x7a, 0x29, 0xfe, 0x67, 0xd6, 0xfd, 0x0b, 0xfb, 0xc2, 0xfe, 0x44,
	0x6b, 0x86, 0xce, 0x7e, 0xfa, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x17, 0xd5, 0x85, 0xae, 0x8d,
	0x1d, 0x00, 0x00,
}
