/** Responsible for processing CSR requests from Node Agents if the
Server is configured to carry an intermediate signing certificate.
This plugin is also responsible for generating the CSR necessary for
an intermediate signing cert, as well as storing the key in memory
or hardware. */

syntax = "proto3";
package spire.server.ca;
option go_package = "ca";

import public "github.com/spiffe/spire/proto/common/plugin/plugin.proto";

/** Represents a request with a certificate signing request. */
message SignX509SvidCsrRequest {
    /** Certificate signing request. */
    bytes csr = 1;
    /** TTL */
    int32 ttl = 2;
}

/** Represents a response with a signed certificate. */
message SignX509SvidCsrResponse {
    /** Signed certificate. */
    bytes signed_certificate = 1;
}

/** Represents an empty request. */
message GenerateCsrRequest {
}

/** Represents a response with a certificate signing request. */
message GenerateCsrResponse {
    /** Certificate signing request. */
    bytes csr = 1;
}

message SignJwtSvidRequest {
    /** SPIFFE ID to embed in the subject claim of the JWT */
    string spiffe_id = 1;
    /** token time-to-live (in seconds) */
    int32 ttl = 2;
    /** token audience */
    repeated string audience = 3;
}

message SignJwtSvidResponse {
    string signed_jwt = 1;
}

/** Represents a request with a signed intermediate certificate. */
message LoadCertificateRequest {
    /** Signed intermediate certificate. */
    bytes signedIntermediateCert = 1;
}

/** Represents an empty response. */
message LoadCertificateResponse {
}

service ServerCA {
    /** SignX509SvidCsr will take in a CSR and sign it with the stored intermediate certificate. */
    rpc SignX509SvidCsr(SignX509SvidCsrRequest) returns (SignX509SvidCsrResponse);
    /** SignJwtSvid will sign a JWT-A-SVID with the stored intermediate certificate. */
    rpc SignJwtSvid(SignJwtSvidRequest) returns (SignJwtSvidResponse);
    /** Used for generating a CSR for the intermediate signing certificate. The CSR will then be submitted to the CA plugin for signing. */
    rpc GenerateCsr(GenerateCsrRequest) returns (GenerateCsrResponse);
    /** Used for setting/storing the signed intermediate certificate. */
    rpc LoadCertificate(LoadCertificateRequest) returns (LoadCertificateResponse);

    /** Responsible for configuration of the plugin. */
    rpc Configure(spire.common.plugin.ConfigureRequest) returns (spire.common.plugin.ConfigureResponse);
    /** Returns the version and related metadata of the installed plugin. */
    rpc GetPluginInfo(spire.common.plugin.GetPluginInfoRequest) returns (spire.common.plugin.GetPluginInfoResponse);
}
