// Code generated by protoc-gen-go-spire. DO NOT EDIT.

package identityproviderv0

import (
	pluginsdk "github.com/spiffe/spire-plugin-sdk/pluginsdk"
	grpc "google.golang.org/grpc"
)

func IdentityProviderServiceServer(server IdentityProviderServer) pluginsdk.ServiceServer {
	return identityProviderServiceServer{IdentityProviderServer: server}
}

type identityProviderServiceServer struct {
	IdentityProviderServer
}

func (s identityProviderServiceServer) GRPCServiceName() string {
	return "spire.server.hostservices.IdentityProvider"
}

func (s identityProviderServiceServer) RegisterServer(server *grpc.Server) interface{} {
	RegisterIdentityProviderServer(server, s.IdentityProviderServer)
	return s.IdentityProviderServer
}

type IdentityProviderServiceClient struct {
	IdentityProviderClient
}

func (c *IdentityProviderServiceClient) IsInitialized() bool {
	return c.IdentityProviderClient != nil
}

func (c *IdentityProviderServiceClient) GRPCServiceName() string {
	return "spire.server.hostservices.IdentityProvider"
}

func (c *IdentityProviderServiceClient) InitClient(conn grpc.ClientConnInterface) interface{} {
	c.IdentityProviderClient = NewIdentityProviderClient(conn)
	return c.IdentityProviderClient
}
