/** Resolves the derived selectors for a given Node Agent. This mapping
will be stored, and used to further derive which workloads the Node
Agent is authorized to run. */

syntax = "proto3";
package spire.server.noderesolver;
option go_package = "github.com/spiffe/spire/proto/spire/plugin/server/noderesolver/v0;noderesolverv0";

import "spire/common/plugin/plugin.proto";
import "spire/common/common.proto";

/** Represents a request with a list of BaseSPIFFEIDs. */
message ResolveRequest {
    /** A list of BaseSPIFFE Ids. */
    repeated string baseSpiffeIdList = 1;
}

/** Represents a response with a map of SPIFFE ID to a list of Selectors. */
message ResolveResponse {
    /** Map[SPIFFE_ID] => Selectors. */
    map<string, spire.common.Selectors> map = 1;
}

service NodeResolver {
    /** Retrieves a list of properties reflecting the current state of a particular node(s). */
    rpc Resolve(ResolveRequest) returns (ResolveResponse);

    /** Responsible for configuration of the plugin. */
    rpc Configure(spire.common.plugin.ConfigureRequest) returns (spire.common.plugin.ConfigureResponse);
    /** Returns the  version and related metadata of the installed plugin. */
    rpc GetPluginInfo(spire.common.plugin.GetPluginInfoRequest) returns (spire.common.plugin.GetPluginInfoResponse);
}
