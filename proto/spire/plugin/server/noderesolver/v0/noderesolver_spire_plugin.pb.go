// Code generated by protoc-gen-go-spire. DO NOT EDIT.

package noderesolverv0

import (
	pluginsdk "github.com/spiffe/spire-plugin-sdk/pluginsdk"
	grpc "google.golang.org/grpc"
)

func NodeResolverPluginServer(server NodeResolverServer) pluginsdk.PluginServer {
	return nodeResolverPluginServer{NodeResolverServer: server}
}

type nodeResolverPluginServer struct {
	NodeResolverServer
}

func (s nodeResolverPluginServer) Type() string {
	return "NodeResolver"
}

func (s nodeResolverPluginServer) GRPCServiceName() string {
	return "spire.server.noderesolver.NodeResolver"
}

func (s nodeResolverPluginServer) RegisterServer(server *grpc.Server) interface{} {
	RegisterNodeResolverServer(server, s.NodeResolverServer)
	return s.NodeResolverServer
}

type NodeResolverPluginClient struct {
	NodeResolverClient
}

func (s NodeResolverPluginClient) Type() string {
	return "NodeResolver"
}

func (c *NodeResolverPluginClient) IsInitialized() bool {
	return c.NodeResolverClient != nil
}

func (c *NodeResolverPluginClient) GRPCServiceName() string {
	return "spire.server.noderesolver.NodeResolver"
}

func (c *NodeResolverPluginClient) InitClient(conn grpc.ClientConnInterface) interface{} {
	c.NodeResolverClient = NewNodeResolverClient(conn)
	return c.NodeResolverClient
}
