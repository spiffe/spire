// Code generated by protoc-gen-go-spire. DO NOT EDIT.

package nodeattestorv0

import (
	pluginsdk "github.com/spiffe/spire-plugin-sdk/pluginsdk"
	grpc "google.golang.org/grpc"
)

func NodeAttestorPluginServer(server NodeAttestorServer) pluginsdk.PluginServer {
	return nodeAttestorPluginServer{NodeAttestorServer: server}
}

type nodeAttestorPluginServer struct {
	NodeAttestorServer
}

func (s nodeAttestorPluginServer) Type() string {
	return "NodeAttestor"
}

func (s nodeAttestorPluginServer) GRPCServiceName() string {
	return "spire.agent.nodeattestor.NodeAttestor"
}

func (s nodeAttestorPluginServer) RegisterServer(server *grpc.Server) interface{} {
	RegisterNodeAttestorServer(server, s.NodeAttestorServer)
	return s.NodeAttestorServer
}

type NodeAttestorPluginClient struct {
	NodeAttestorClient
}

func (s NodeAttestorPluginClient) Type() string {
	return "NodeAttestor"
}

func (c *NodeAttestorPluginClient) IsInitialized() bool {
	return c.NodeAttestorClient != nil
}

func (c *NodeAttestorPluginClient) GRPCServiceName() string {
	return "spire.agent.nodeattestor.NodeAttestor"
}

func (c *NodeAttestorPluginClient) InitClient(conn grpc.ClientConnInterface) interface{} {
	c.NodeAttestorClient = NewNodeAttestorClient(conn)
	return c.NodeAttestorClient
}
