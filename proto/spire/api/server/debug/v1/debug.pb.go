// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spire/api/server/debug/v1/debug.proto

package debug

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	types "github.com/spiffe/spire/proto/spire/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoRequest) Reset()         { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()    {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_82b2f92dd8d9caf5, []int{0}
}

func (m *GetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoRequest.Unmarshal(m, b)
}
func (m *GetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoRequest.Merge(m, src)
}
func (m *GetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoRequest.Size(m)
}
func (m *GetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoRequest proto.InternalMessageInfo

type GetInfoResponse struct {
	// Server SVID chain
	SvidChain []*GetInfoResponse_Cert `protobuf:"bytes,1,rep,name=svid_chain,json=svidChain,proto3" json:"svid_chain,omitempty"`
	// Server uptime in seconds
	Uptime int32 `protobuf:"varint,2,opt,name=uptime,proto3" json:"uptime,omitempty"`
	// Amount of registered agents
	AgentsCount int32 `protobuf:"varint,3,opt,name=agents_count,json=agentsCount,proto3" json:"agents_count,omitempty"`
	// Amount of federated bundles
	FederatedBundlesCount int32 `protobuf:"varint,4,opt,name=federated_bundles_count,json=federatedBundlesCount,proto3" json:"federated_bundles_count,omitempty"`
	// Amount of registration entries on database
	EntriesCount         int32    `protobuf:"varint,5,opt,name=entries_count,json=entriesCount,proto3" json:"entries_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoResponse) Reset()         { *m = GetInfoResponse{} }
func (m *GetInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetInfoResponse) ProtoMessage()    {}
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_82b2f92dd8d9caf5, []int{1}
}

func (m *GetInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoResponse.Unmarshal(m, b)
}
func (m *GetInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoResponse.Merge(m, src)
}
func (m *GetInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetInfoResponse.Size(m)
}
func (m *GetInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoResponse proto.InternalMessageInfo

func (m *GetInfoResponse) GetSvidChain() []*GetInfoResponse_Cert {
	if m != nil {
		return m.SvidChain
	}
	return nil
}

func (m *GetInfoResponse) GetUptime() int32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *GetInfoResponse) GetAgentsCount() int32 {
	if m != nil {
		return m.AgentsCount
	}
	return 0
}

func (m *GetInfoResponse) GetFederatedBundlesCount() int32 {
	if m != nil {
		return m.FederatedBundlesCount
	}
	return 0
}

func (m *GetInfoResponse) GetEntriesCount() int32 {
	if m != nil {
		return m.EntriesCount
	}
	return 0
}

type GetInfoResponse_Cert struct {
	// Certificate SPIFFE ID
	Id *types.SPIFFEID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Expiration time
	ExpiresAt int64 `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Subject
	Subject              string   `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoResponse_Cert) Reset()         { *m = GetInfoResponse_Cert{} }
func (m *GetInfoResponse_Cert) String() string { return proto.CompactTextString(m) }
func (*GetInfoResponse_Cert) ProtoMessage()    {}
func (*GetInfoResponse_Cert) Descriptor() ([]byte, []int) {
	return fileDescriptor_82b2f92dd8d9caf5, []int{1, 0}
}

func (m *GetInfoResponse_Cert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoResponse_Cert.Unmarshal(m, b)
}
func (m *GetInfoResponse_Cert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoResponse_Cert.Marshal(b, m, deterministic)
}
func (m *GetInfoResponse_Cert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoResponse_Cert.Merge(m, src)
}
func (m *GetInfoResponse_Cert) XXX_Size() int {
	return xxx_messageInfo_GetInfoResponse_Cert.Size(m)
}
func (m *GetInfoResponse_Cert) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoResponse_Cert.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoResponse_Cert proto.InternalMessageInfo

func (m *GetInfoResponse_Cert) GetId() *types.SPIFFEID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *GetInfoResponse_Cert) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *GetInfoResponse_Cert) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func init() {
	proto.RegisterType((*GetInfoRequest)(nil), "spire.api.server.debug.v1.GetInfoRequest")
	proto.RegisterType((*GetInfoResponse)(nil), "spire.api.server.debug.v1.GetInfoResponse")
	proto.RegisterType((*GetInfoResponse_Cert)(nil), "spire.api.server.debug.v1.GetInfoResponse.Cert")
}

func init() {
	proto.RegisterFile("spire/api/server/debug/v1/debug.proto", fileDescriptor_82b2f92dd8d9caf5)
}

var fileDescriptor_82b2f92dd8d9caf5 = []byte{
	// 375 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x8b, 0xdb, 0x30,
	0x10, 0xc5, 0xb1, 0xf3, 0x8f, 0x4c, 0xd2, 0x3f, 0x08, 0xd2, 0xba, 0x86, 0x42, 0x9a, 0x12, 0x48,
	0x7b, 0x90, 0x48, 0x0a, 0xbd, 0x94, 0x52, 0x9a, 0xa4, 0x29, 0xb9, 0x94, 0xe2, 0xbd, 0xed, 0xc5,
	0x6b, 0x5b, 0xe3, 0x44, 0xcb, 0xc6, 0xd6, 0x5a, 0xb2, 0xd9, 0xfd, 0xb8, 0xfb, 0x4d, 0x16, 0x4b,
	0x4e, 0x0e, 0x0b, 0x81, 0xdc, 0xa4, 0xf7, 0x7e, 0x33, 0xf6, 0x3c, 0x0d, 0x4c, 0x95, 0x14, 0x05,
	0xb2, 0x48, 0x0a, 0xa6, 0xb0, 0xa8, 0xb0, 0x60, 0x1c, 0xe3, 0x72, 0xc7, 0xaa, 0xb9, 0x3d, 0x50,
	0x59, 0xe4, 0x3a, 0x27, 0x1f, 0x0c, 0x46, 0x23, 0x29, 0xa8, 0xc5, 0xa8, 0x75, 0xab, 0xb9, 0xef,
	0xdb, 0x0e, 0xfa, 0x51, 0xa2, 0x62, 0x4a, 0x8a, 0x34, 0x45, 0xc1, 0x6d, 0xd9, 0xe4, 0x2d, 0xbc,
	0xfe, 0x8b, 0x7a, 0x9b, 0xa5, 0x79, 0x80, 0xf7, 0x25, 0x2a, 0x3d, 0x79, 0x72, 0xe1, 0xcd, 0x49,
	0x52, 0x32, 0xcf, 0x14, 0x92, 0x7f, 0x00, 0xaa, 0x12, 0x3c, 0x4c, 0xf6, 0x91, 0xc8, 0x3c, 0x67,
	0xdc, 0x9a, 0x0d, 0x16, 0x8c, 0x9e, 0xfd, 0x22, 0x7d, 0x51, 0x4f, 0x57, 0x58, 0xe8, 0xa0, 0x5f,
	0xb7, 0x58, 0xd5, 0x1d, 0xc8, 0x3b, 0xe8, 0x96, 0x52, 0x8b, 0x03, 0x7a, 0xee, 0xd8, 0x99, 0x75,
	0x82, 0xe6, 0x46, 0x3e, 0xc1, 0x30, 0xda, 0x61, 0xa6, 0x55, 0x98, 0xe4, 0x65, 0xa6, 0xbd, 0x96,
	0x71, 0x07, 0x56, 0x5b, 0xd5, 0x12, 0xf9, 0x0e, 0xef, 0x53, 0xe4, 0x58, 0x44, 0x1a, 0x79, 0x18,
	0x97, 0x19, 0xbf, 0xc3, 0x23, 0xdd, 0x36, 0xf4, 0xe8, 0x64, 0x2f, 0xad, 0x6b, 0xeb, 0x3e, 0xc3,
	0x2b, 0xcc, 0x74, 0x21, 0x4e, 0x74, 0xc7, 0xd0, 0xc3, 0x46, 0x34, 0x90, 0x9f, 0x42, 0xbb, 0xfe,
	0x55, 0x32, 0x05, 0x57, 0x70, 0xcf, 0x19, 0x3b, 0xb3, 0xc1, 0x62, 0xd4, 0xcc, 0x69, 0xe2, 0xa3,
	0x57, 0xff, 0xb7, 0x9b, 0xcd, 0x9f, 0xed, 0x3a, 0x70, 0x05, 0x27, 0x1f, 0x01, 0xf0, 0xa1, 0x36,
	0x55, 0x18, 0x69, 0x33, 0x4a, 0x2b, 0xe8, 0x37, 0xca, 0x6f, 0x4d, 0x3c, 0xe8, 0xa9, 0x32, 0xbe,
	0xc5, 0xc4, 0x0e, 0xd2, 0x0f, 0x8e, 0xd7, 0x85, 0x80, 0xce, 0xba, 0xce, 0x8a, 0xdc, 0x40, 0xaf,
	0xc9, 0x8a, 0x7c, 0xb9, 0x24, 0x4f, 0xf3, 0x44, 0xfe, 0xd7, 0xcb, 0xa3, 0x5f, 0xfe, 0xba, 0xfe,
	0xb9, 0x13, 0x7a, 0x5f, 0xc6, 0x34, 0xc9, 0x0f, 0xcd, 0xeb, 0x33, 0xbb, 0x10, 0x66, 0x03, 0xd8,
	0xd9, 0xf5, 0xfa, 0x61, 0x0e, 0x71, 0xd7, 0x60, 0xdf, 0x9e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x8e,
	0x79, 0x6e, 0x4a, 0x88, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DebugClient is the client API for Debug service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DebugClient interface {
	// Get information about SPIRE server
	GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error)
}

type debugClient struct {
	cc grpc.ClientConnInterface
}

func NewDebugClient(cc grpc.ClientConnInterface) DebugClient {
	return &debugClient{cc}
}

func (c *debugClient) GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error) {
	out := new(GetInfoResponse)
	err := c.cc.Invoke(ctx, "/spire.api.server.debug.v1.Debug/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DebugServer is the server API for Debug service.
type DebugServer interface {
	// Get information about SPIRE server
	GetInfo(context.Context, *GetInfoRequest) (*GetInfoResponse, error)
}

// UnimplementedDebugServer can be embedded to have forward compatible implementations.
type UnimplementedDebugServer struct {
}

func (*UnimplementedDebugServer) GetInfo(ctx context.Context, req *GetInfoRequest) (*GetInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}

func RegisterDebugServer(s *grpc.Server, srv DebugServer) {
	s.RegisterService(&_Debug_serviceDesc, srv)
}

func _Debug_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spire.api.server.debug.v1.Debug/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugServer).GetInfo(ctx, req.(*GetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Debug_serviceDesc = grpc.ServiceDesc{
	ServiceName: "spire.api.server.debug.v1.Debug",
	HandlerType: (*DebugServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _Debug_GetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "spire/api/server/debug/v1/debug.proto",
}
