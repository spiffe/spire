// Code generated by protoc-gen-go-spire. DO NOT EDIT.

package legacyplugin

import (
	pluginsdk "github.com/spiffe/spire-plugin-sdk/pluginsdk"
	grpc "google.golang.org/grpc"
)

func SomePluginPluginServer(server SomePluginServer) pluginsdk.PluginServer {
	return somePluginPluginServer{SomePluginServer: server}
}

type somePluginPluginServer struct {
	SomePluginServer
}

func (s somePluginPluginServer) Type() string {
	return "SomePlugin"
}

func (s somePluginPluginServer) GRPCServiceName() string {
	return "private.test.legacyplugin.SomePlugin"
}

func (s somePluginPluginServer) RegisterServer(server *grpc.Server) interface{} {
	RegisterSomePluginServer(server, s.SomePluginServer)
	return s.SomePluginServer
}

type SomePluginPluginClient struct {
	SomePluginClient
}

func (s SomePluginPluginClient) Type() string {
	return "SomePlugin"
}

func (c *SomePluginPluginClient) IsInitialized() bool {
	return c.SomePluginClient != nil
}

func (c *SomePluginPluginClient) GRPCServiceName() string {
	return "private.test.legacyplugin.SomePlugin"
}

func (c *SomePluginPluginClient) InitClient(conn grpc.ClientConnInterface) interface{} {
	c.SomePluginClient = NewSomePluginClient(conn)
	return c.SomePluginClient
}
