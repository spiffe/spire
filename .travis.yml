sudo: required
dist: bionic

services:
  - docker

language: go

cache:
  directories:
    - .cache

jobs:
  include:
    - stage: build release
      script:
        - ./build.sh setup
        - ./build.sh utils
        - ./build.sh protobuf_verify
        - ./build.sh test
        - ./build.sh binaries
        - ./build.sh integration
        - ./build.sh artifact
        - ./build.sh release
      deploy:
        - provider: s3
          access_key_id: $AWS_ACCESS_KEY_ID
          secret_access_key: $AWS_SECRET_ACCESS_KEY
          bucket: scytale-artifacts
          local-dir: artifacts
          upload-dir: spire
          acl: public_read
          skip_cleanup: true
          region: us-east-2
          on:
            all_branches: true
            condition: $AWS_SECRET_ACCESS_KEY != ""
        - provider: releases
          api_key: $GITHUB_TOKEN
          file_glob: true
          file: releases/*
          skip_cleanup: true
          on:
            tags: true
            condition: $GITHUB_TOKEN != ""

    - stage: run nightly
      if: env(TRAVIS_EVENT_TYPE) = pull_request 
      env:
        - CHANGE_MINIKUBE_NONE_USER=true
      before_script:
        # Make root mounted as rshared to fix kube-dns issues.
        - sudo mount --make-rshared /
        # Download kubectl, which is a requirement for using minikube.
        - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.13.2/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        # Download minikube.
        - curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
        - sudo minikube start --vm-driver=none --bootstrapper=kubeadm
        # Fix the kubectl context, as it's often stale.
        - minikube update-context
        # Wait for Kubernetes to be up and ready.
        - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
      script:
        - ./build.sh nightly

notifications:
    slack:
        secure: auV9VWkA50+tf4cKUUkMH/KqggKSJCBV9ruLSF1LVgqQYnK34rp/PPzx4gTiQYA07ltnu8Hi13XMoN5+OFsRfzVRCKP1tlGuTvVhpsoyMGiNxBY1Yw2OhZXRoSjCwJkuBsAkkaxAgsC58IEnxhKq+M83dDYx+WiybO+aQnQ6ExbGE4oUBhhBkYKrHy4Kt9/3yWLqicV/VXFtvwbXG5OG1zNNOYCUEud4Y8j6pcb0kyVqlHFjAjasLPsln0QSaTxOThLZCxMZD2zpbI1xxO5tBusqDe1QOMSgsyAbDaNk7wCb2kU+0hRKcfiuWShrswhECSJsYUImLq4c77WbdhrjRgscgY2779T/jaJHbG3Lx7GlDWYLSgFcM8VfZK+K5XPcm35F2qGPiEjtYEEAPS2qQM9PZyvTEVPxjNEc2PE3bINTjibcKbfATNa1ULQvJ6ixtSL9Ao8828iUfaR0mK4eaWnJckov5OaGvah+v6vh49JqZTEN3Or8XTUw0ra14euS6jR30XB2Y3S8/0NuvHY+ytJe36yQn9FdFM3asNpBuNP7F9v00WJr3+Lhg7KHMd0m19ulwtmXiWJYU25AVMk/oXp+aq+678AvhYkYZGaUzC3timsuTlAjH9DA9yxBW+8KE9y46Jq8vXHXhKTfdKDVVUyOFxKKGAjCA5QbeKx+5QU=

